var CONF; //读取的config配置
var ROMJSON;//rom列表
var SCROLL_PAGE = 0; //当前滚动条翻页页数
var SCROLL_LOCK = false; //滚动条锁
var SCROLL_POS = 0; //默认滚动条位置
var MAXZOOM = 5; //最大缩放等级

view.root.on("ready", function(){

    /********** 数据初始化 **********/

    //初始化全局配置
    initConfig("0");

    //改变默认窗口尺寸
    view.state = CONF.Default.WindowState.toInteger();

    //初始化rom
    var pf = CONF.Default.Platform;
    var menu =  $(#menulist).select("dd:current").attributes["opt"];
    ROMJSON = view.GetGameList(pf,menu,"","",SCROLL_PAGE)

    createRomList(0); //生成rom列表
    //生成rom数量
    var romCount = view.GetGameCount(pf,"","");
    $(#rom_count_num).html = romCount; //初始化在线人数


    // ================= 事件 =================

   //调整窗口大小
    view.on("sizing", function(evt) {
        //更新默认配置
        view.UpdateConfig("window_width",evt.width);
        view.UpdateConfig("window_height",evt.height);
    });

    //视图窗口状态改变时
    view.on("statechange", function() {
        if(view.state == 1 || view.state == 3){
            view.UpdateConfig("window_state",view.state);
        }
    });
 
    //搜索功能 - 实时改变文本
    self.on("change", "#search_input", function(evt) {
        search();
    });

    //搜索功能 - 点击搜索按钮
    self.on("click", "#search_submit", function(evt) {
        search();
    });
6
    //目录单击
    self.on("click", "#menulist > dd", function(evt) {
        changeMenu(this);
    });
    
    //双击游戏模块，启动游戏
    self.on("dblclick", "#romlist li[class=romitem]", function(evt) {
        view.RunGame(this.attributes["rid"],"");
    });

    //点击模块，打开侧边栏
    self.on("click", "#romlist li[class=romitem]", function(evt) {
        openSidebar(this);
    });

    //游戏启动（侧边栏）
    self.on("click", "#right div[class=run]", function(evt) {
        var simdom = $(#sim_select).select("li:current");
        var sim = "";
        if(simdom != undefined){
            sim = simdom.attributes["sim"];
        }
        view.RunGame(this.attributes["rid"],sim);
    });    
           
    //设置喜爱
    self.on("click", "#right_favorite", function(evt) {
        setFavorite(this);
    });

    //分页
    $(#center).onScroll = function(evt) {
        scrollLoadRom(evt.scrollPos);
    };

    //切换rom列表样式
    self.on("click", "#switch_romlist", function(evt) {
        switchRomListStyle(this);
    });
    
    //列表图标缩放
    self.on("click", "#zoom", function(evt) {
        romBlockZoom(this);
    });

    //文字大小
    self.on("click", "#font_size", function(evt) {

        var  val = this.attributes['value'].toInteger();
        var dom = $(#romlist);
        val ++;
        if (val >= 11){
            if ($(#switch_romlist).attributes["value"] == 1){
                val = 0;
            }else{
                val = 1;
            }
        }
        for (var i = 0; i <= 10; i++){
           dom.attributes.removeClass('fontsize'+i);
        }

        dom.attributes.addClass('fontsize'+val);
        this.attributes['value'] = val;
        view.UpdateConfig("font_size",val)

    });

   //回到顶端
    self.on("click", "#istop", function(evt) {
        $(#center).scrollTo(0,0, false);
    });
    
    //生成缓存
    self.on("click", "#create_cache", function(evt) {
        $(#create).state.disabled = true;
        $(#create).attributes.addClass("disabled");
        startLoading();
        var opt = this.attributes["opt"];
        var platform = 0;

        if (opt == "platform"){
            platform = ACTIVE_PLATFORM;
        }
        view.CreateRomCache(platform);
    });

   //打开快捷工具
    self.on("click", "#shortcut menu li", function(evt) {
        runShortcut(this);
    });

    //切换主题
    self.on("click", "#theme menu li", function(evt) {
        changeTheme(this);
    });

    //启动图片下载
    self.on("click", "#right_thumb_down", function(evt) {
        thumbDown(this.attributes["rid"],this.attributes["rname"]);
    });

    //按字母搜索rom
    self.on("click", "#num_search li", function(evt) {
        numSearch(this);
    });

    //弹出关于窗口
    self.on("click", "#about", function(evt) {
        view.dialog({
            url:self.url(ROOTPATH + "about.html"),
            width:480,
        })
    });

    //弹出设置窗口
    self.on("click", "#config", function(evt) {
        view.dialog({
            url:self.url(ROOTPATH + "config.html"),
            width:655,
            height:760,
            parameters: {
                getPlatform:getPlatform,
                getPlatformById:getPlatformById,
                getSimulatorByPlatform:getSimulatorByPlatform,
                updateConfig:updateConfig,
                updatePlatform:updatePlatform,
                addPlatform:addPlatform,
                delPlatform:delPlatform,
                getShortcut:getShortcut,
                addShortcut:addShortcut,
                updateShortcut:updateShortcut,
                delShortcut:delShortcut,
                updateShortcutSort:updateShortcutSort,
            };
        });
        startLoading();
        initConfig("1");
        endLoading();
    });

    //攻略弹窗按钮
    $(#right_desc).on("click", function(evt) {

        //如果是禁用状态
        if(this.attributes.hasClass("right_desc_disable") == true){
            return;
        }

        //检查运行攻略文件
        var getjson = view.GetGameDetail(this.attributes["rid"]);
        var detailObj = JSON.parse(getjson);

        if(detailObj.StrategyFile != ""){
            view.RunStrategy(detailObj.StrategyFile);
            return;
        }

        //如果攻略文件不是可运行程序，则窗口运行        
        other = view.window{
          type:View.FRAME_WINDOW,
          url: self.url("desc.html"),
          alignment: 5,
          screen:1,
          width : 1280,
          height : 800,
          parameters: {
                content:detailObj.StrategyContent,
                title:detailObj.Info.Name,
                id:this.attributes["rid"],
                conf:CONF,
          };
        };
    });

    //设置菜单 帮助按钮
    $(#help).on("click", function(evt) {
        runHelp();
    });

    //侧边栏切换模拟器
    self.on("click", "#sim_select > li", function(evt) {
        this.state.current = true;
        var romid = this.attributes["rom"];
        var simid = this.attributes["sim"];
        view.SetRomSimulator(romid,simid);
    });

    //设置rom的cmd
    self.on("click", "#sim_select > li button", function(evt) {
        var obj = this.parent;
        var romId = obj.attributes["rom"];
        var simId = obj.attributes["sim"];
        var name = obj.select("p").html;
        var cmdstr = view.GetRomCmd(romId,simId);
        var cmdObj = JSON.parse(cmdstr);
        var simJson =  view.dialog({
            url:self.url(ROOTPATH + "dialog/edit_rom_cmd.html"),
            width:360,
            height:215,
            parameters: {
                name:name,
                simId:simId,
                romId:romId,
                cmd:cmdObj.Cmd,
                unzip:cmdObj.Unzip,
            }
        });

        if(simJson == undefined){
            return;
        }
        view.UpdateRomCmd(romId,simId,simJson);
    });

    //侧边栏缩略图滑动特效
    self.on("click", "#rotate", function(evt) {
        var container = $(div#stack);
        var next = container.shown.next || container.first;
        this.state.disabled = true;
        rotateTo(next, :: (this super).state.disabled = false);
    });

    //开启关闭平台栏
    self.on("click", "#close_platform", function(evt) {
        togglePlatform();
    });
    //开启关闭菜单栏
    self.on("click", "#close_menu", function(evt) {
        toggleMenu();
    });
    //开启关闭侧边栏
    self.on("click", "#close_right", function(evt) {
        toggleSidebar();
    });

});

//初始化配置
function initConfig(isfresh){

    var confstr = view.InitData("config",isfresh);
    CONF = JSON.parse(confstr);

    //如果初始路径不同，则刷新数据
    if(CONF.RootPath != CONF.Default.RootPath){
        view.UpdateConfig("root_path",CONF.RootPath);
    }

    //创建语言
    if (isfresh == "0"){
        createLang();
    }

    createTheme(); //创建主题
    createPlatform(); //生成平台列表
    createShortcutList(); //生成快捷工具列表
    initRomListStyle(); //初始化游戏列表样式
    initFontSize(); //初始化字体大小

    //生成菜单
    var menujson = view.GetMenuList(CONF.Default.Platform);
    createMenuList(menujson);

    //激活第一个字母索引
    $(#num_search li).state.current = true;

  }


//启动帮助
function runHelp(){
    Sciter.launch("http://www.simui.net/");
}


//开启关闭平台栏
function togglePlatform(){
    var dom = $(#left_platform);
    if (dom.style["display"] == "block"){
        dom.style["display"] = "none";
    }else{
        dom.style["display"] = "block";
    }
}
//开启关闭菜单栏
function toggleMenu(){
    var dom = $(#left_menu);
    if (dom.style["display"] == "block"){
        dom.style["display"] = "none";
    }else{
        dom.style["display"] = "block";
    }
}
//开启关闭侧边栏
function toggleSidebar(){
    var dom = $(#right);
    if (dom.style["display"] == "block"){
        dom.style["display"] = "none";
    }else{
        dom.style["display"] = "block";
    }
}