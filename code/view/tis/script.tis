
var CONF; //读取的config配置
var ROMJSON;//rom列表
var SCROLL_PAGE = 0; //当前滚动条翻页页数
var SCROLL_LOCK = false; //滚动条锁
var SCROLL_POS = 0; //默认滚动条位置
var MAXZOOM = 5; //最大缩放等级
var ACTIVETIME = null; //正在启动的定时器
var ACTIVE_PLATFORM = ""; //当前选定的平台
var ACTIVE_ROM = ""; //当前选定的rom

view.root.on("ready", function(){

    /********** 数据初始化 **********/
    //初始化全局配置
    initConfig("0");

    //初始化rom
    var pf = CONF.Default.Platform;
    ROMJSON = view.GetGameList(pf,"","","",SCROLL_PAGE)

    createRomList(0); //生成rom列表
    //生成rom数量
    var romCount = view.GetGameCount(pf,"","");
    $(#rom_count_num).html = romCount; //初始化在线人数

    // ================= 事件 =================
    //方向键选择rom
    self.on("keyup", function(evt) {

        if(evt.keyCode == Event.VK_TAB){
        //}else if(evt.keyCode == Event.VK_UP){
        //}else if(evt.keyCode == Event.VK_DOWN){                    
        }else if(evt.keyCode == Event.VK_LEFT){

            //如果没有rom，则直接返回
            if($$(#romlist li).length == 0){
                return;
            }
            //如果当前没有选定，则选定第一个
            var current = $(#romlist li:current);
            if (current == undefined){
                current = $(#romlist li);
                current.state.current = true; //第一个
                openSidebar(current);
                $(#test).html = "first";
            }else{
                //读取上一个节点
                var pri = $(#romlist li:current).priorNode;
                //如果没有上一个节点，直接返回
                if(pri == undefined){
                    return;
                }else{
                    pri.state.current = true;
                    openSidebar(pri);
                }
            }
            //nodeIndex
        }else if(evt.keyCode == Event.VK_RIGHT){

            //如果没有rom，则直接返回
            if($$(#romlist li).length == 0){
                return;
            }

            //如果当前没有选定，则选定第一个
            var current = $(#romlist li:current);
            if (current == undefined){
                current = $(#romlist li);
                current.state.current = true; //第一个
                openSidebar(current);
            }else{
                //读取上一个节点
                var next = $(#romlist li:current).nextNode;
                //如果没有上一个节点，直接返回
                if(next == undefined){
                    return;
                }else{
                    next.state.current = true;
                    openSidebar(next);
                }
            }
        }
        //else{
        //if((evt.keyCode>47 && evt.keyCode<58) || (evt.keyCode>64 && evt.keyCode<91)  || (evt.keyCode>95 && evt.keyCode<106)){}
        //}
    });
    
    //搜索功能 - 实时改变文本
    self.on("change", "#search_input", function(evt) {
        search();
    });

    //搜索功能 - 点击搜索按钮
    self.on("click", "#search_submit", function(evt) {
        search();
    });


    //平台单击
    self.on("click", "#platform_ul > li", function(evt) {
        changePlatform(this);
    });

    //平台下拉菜单 - 打开目录
    self.on("click", ".opendir", function(evt) {
        openPlatformDir(this);
    });

    //目录单击
    self.on("click", "#menulist > dd", function(evt) {
        changeMenu(this);
    });
    
    //单击游戏，启动侧边栏
    self.on("click", "#romlist li[class=romitem]", function(evt) {
        openSidebar(this);
    });

    //游戏启动（侧边栏）
    self.on("click", "#right div[class=run]", function(evt) {
        var simdom = $(#sim_select).select("li:current");
        var sim = "";
        if(simdom != undefined){
            sim = simdom.attributes["sim"];
        }
        view.RunGame(this.attributes["rid"],sim);
    });    
           
    //设置喜爱
    self.on("click", "#right_favorite", function(evt) {
        setFavorite(this);
    });

    //分页
    $(#center).onScroll = function(evt) {
        scrollLoadRom(evt);
    };

    //切换rom列表样式
    self.on("click", "#switch_romlist", function(evt) {
        switchRomListStyle(this);
    });
    
    //列表图标缩放
    self.on("click", "#zoom", function(evt) {
        romBlockZoom(this);
    });

    //生成缓存
    self.on("click", "#create", function(evt) {
        createAllCache("1");
    });

    //启动电子书
    self.on("click", "#book", function(evt) {
        view.RunBook();
    });

    //切换主题
    self.on("click", "#theme menu li", function(evt) {
        changeTheme(this);
    });

    //启动图片下载
    self.on("click", "#right_thumb_down", function(evt) {
        view.dialog({
            url:self.url(ROOTPATH + "down_thumbs.html"),
            caption:CONF.Lang.ThumbsDown,
            width:1024,
            height:750,
            parameters: {
                id:this.attributes["rid"],
                keyword:this.attributes["rname"],
                updateRomThumbs:updateRomThumbs,
            };
        });
    });

    //按字母搜索rom
    self.on("click", "#num_search li", function(evt) {
        numSearch(this);
    });

    //弹出关于窗口
    self.on("click", "#about", function(evt) {
        view.dialog({
            url:self.url(ROOTPATH + "about.html"),
            width:480,
        })
    });

    //弹出设置窗口
    self.on("click", "#config", function(evt) {
        view.dialog({
            url:self.url(ROOTPATH + "config.html"),
            width:650,
            height:650,
            parameters: {
                getPlatform:getPlatform,
                getPlatformById:getPlatformById,
                getSimulatorByPlatform:getSimulatorByPlatform,
                updateConfig:updateConfig,
                updatePlatform:updatePlatform,
                addPlatform:addPlatform,
                delPlatform:delPlatform,
            };
        });
        $(#loading).style["display"]="block";
        initConfig("1");
        $(#loading).style["display"]="none";
    });

    //平台列表鼠标移入，初始化一些常量参数
    $(#tb_left).on("mouseenter", function(evt) {
        platformMouseEnter(evt);
    });

    //平台列表鼠标移出，销毁一些参数
    $(#tb_left).on("mouseleave", function(evt) {
       platformMouseLeave(evt);
    });

    //平台列表鼠标移动，滑动功能
    self.on("mousemove", "#tb_left", function(evt) {
        platformMouseMove(evt);
    });
 
    //调整窗口大小
    view.on("size", function(evt) {
        //还原平台拉条位置
        platformResize(evt);
    });

    //攻略弹窗按钮
    $(#right_desc).on("click", function(evt) {

        //如果是禁用状态
        if(this.attributes.hasClass("right_desc_disable") == true){
            return;
        }

        other = view.window{
          type:View.FRAME_WINDOW,
          url: self.url("desc.html"),
          alignment: 5,
          screen:1,
          width : 1280,
          height : 800,
          parameters: {
                getRomDetail:getRomDetail,
                id:this.attributes["rid"],
                conf:CONF,
            };
        };
    });

    //设置菜单 帮助按钮
    $(#help).on("click", function(evt) {
        Sciter.launch("http://www.simui.net/");
    });

    //侧边栏切换模拟器
    self.on("click", "#sim_select > li", function(evt) {
        this.state.current = true;
        var romid = this.attributes["rom"];
        var simid = this.attributes["sim"];
        view.SetRomSimulator(romid,simid);
    });

});

//侧边栏缩略图滑动特效
$(#rotate) << event click() {     
    var container = $(div#stack);
    var next = container.shown.next || container.first;
    this.state.disabled = true;
    rotateTo(next, :: (this super).state.disabled = false);
}

//初始化配置
function initConfig(isfresh){

    var confstr = view.InitData("config",isfresh);
    CONF = JSON.parse(confstr);

    //如果初始路径不同，则刷新数据
    if(CONF.RootPath != CONF.Default.RootPath){
        //删除所有缓存后，重建数据库rom
        view.TruncateRomCache();
        view.CreateRomCache();
        view.UpdateConfig("root_path",CONF.RootPath);
        view.msgbox(#alert,CONF.Lang.FirstBootCreateCache);
    }

    createLang(); //创建语言
    createTheme(); //创建主题
    createPlatform(); //生成平台列表
    initRomListStyle(); //初始化游戏列表样式
   
    //生成菜单
    var menujson = view.GetMenuList(CONF.Default.Platform);
    createMenuList(menujson);

    //激活第一个字母索引
    $(#num_search li).state.current = true;

    //动态设置平台栏宽度，滑动平台栏使用
    setPlatformWidth();
  
}

//弹出错误窗口
function errorBox(str){
    view.msgbox(#error,str);
}

