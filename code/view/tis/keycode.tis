view.root.on("ready", function(){


    //禁用系统默认滚动
    self.on("keydown", "#center", function(evt) {
         return true;
    });

    //方向键选择rom
    
})

/**
 * rom模块
**/

function keyRomLeft(){
    //如果没有rom，则直接返回
    if($$(#romlist li).length == 0){
        return;
    }
    if ($(#romlist li:current) == undefined){
        var nextDom = $(#romlist).select("li:nth-child(2)");
        nextDom.state.current = true;
        openSidebar(nextDom);
        return;
    }

    //如果当前没有选定，则选定第一个
    var current = $(#romlist li:current);
    if (current == undefined){
        current = $(#romlist li);
        current.state.current = true; //第一个
        openSidebar(current);
    }else{
        //读取上一个节点
        var pri = $(#romlist li:current).priorNode;
        //如果没有上一个节点，直接返回
        if(pri == undefined || pri.style["display"] == "none"){
            return;
        }else{
            pri.state.current = true;
            openSidebar(pri);
        }
    }
}

function keyRomRight(){
   
    //如果没有rom，则直接返回
    if($$(#romlist li).length == 0){
        return;
    }

    if ($(#romlist li:current) == undefined){
        var nextDom = $(#romlist).select("li:nth-child(2)");
        nextDom.state.current = true;
        openSidebar(nextDom);
        return;
    }
    //如果当前没有选定，则选定第一个
    var current = $(#romlist li:current);
    if (current == undefined){
        current = $(#romlist li);
        current.state.current = true; //第一个
        openSidebar(current);
    }else{
        //读取上一个节点
        var next = $(#romlist li:current).nextNode;
        //如果没有上一个节点，直接返回
        if(next == undefined){
            return;
        }else{
            next.state.current = true;
            openSidebar(next);
        }
    } 
}

function keyRomUp(){
    //如果没有rom，则直接返回
    if($$(#romlist li).length < 2 ){
        return;
    }
    var nextDom;
    if ($(#romlist li:current) == undefined){
        nextDom = $(#romlist).select("li:nth-child(2)");
    }else{
        var current = $(#romlist li:current).index; //当前选中li的index值
        //如果当前是第一个，则不跳转了
        if(current == 0){
            return;
        }
        var idx = getRomlistRowNum(); //计算出每行li的数量
        var next = current - idx  + 1; //要跳转到的位置

        if(next<=1){
            next = 2;
        }

        var rootDom = $(#romlist);
        nextDom = rootDom.select("li:nth-child("+ next +")");


        if(nextDom != undefined && nextDom.index <= 0){
            nextDom = rootDom.select("li:nth-child(2)"); //定位到第一个
        }
    }
 
    if (nextDom != undefined){
        nextDom.state.current = true;
        openSidebar(nextDom);
    }
}

function keyRomDown(){

    //如果没有rom，则直接返回
    if($$(#romlist li).length < 2 ){
        return;
    }
    var nextDom;
    if ($(#romlist li:current) == undefined){
        nextDom = $(#romlist).select("li:nth-child(2)");
    }else{
        var rootDom = $(#romlist);
        var current = $(#romlist li:current).index; //当前选中li的index值
        var lastDom = rootDom.select("li:last-child").index;
        //如果当前是最后一个，则不跳转了
        if(current == lastDom){
            return;
        }
        var idx = getRomlistRowNum(); //计算出每行li的数量
        var next = current + idx + 1;
        nextDom = rootDom.select("li:nth-child("+ next +")"); //要跳转到的位置
        if(nextDom == undefined){
            nextDom = rootDom.select("li:last-child").state.current = true; //定位到最后一个
        }
    }
    nextDom.state.current = true;
    openSidebar(nextDom);
}

//计算出每行li的数量
function getRomlistRowNum(){
    var dom  = $(#romlist);

    var domLi = $(#romlist).select("li:nth-child(2)");
    var out = px(dom.box(#width));
    var outwidth = (out).toFloat(#dip);
    var w = px(domLi.box(#width));

    var ml = domLi.style["margin-left"].toString();
    var mr = domLi.style["margin-right"].toString();
    w = (w).toFloat(#dip);
    ml = ml.replace("dip","").toInteger();
    mr = mr.replace("dip","").toInteger();
    var domWidth = w + ml + mr ;
    return Math.ceil(outwidth / domWidth).toInteger(); //每行的li数量
}

//向上滚动
function scrollUp(listType){

    if ($(#romlist li:current) == undefined){
        return;
    }

    var centerScroll = $(#center).scroll(#top); //滚动条高度
    var(x,liY,w,liH) = $(#romlist li:current).box(#rectw,#margin,#parent);
    var titlebarHeight = $(#titlebar).box(#height); //标题栏高度
    var scro = 0;
    if (centerScroll > liY){
        if(listType == "1"){
                scro = liY - liH + titlebarHeight;
        }else{
                scro = liY + liH;
        }
        $(#center).scrollTo(0,scro, false); // increment scroll position by 100px, no animation
    }
}

//向下滚动
function scrollDown(listType){
    if ($(#romlist li:current) == undefined){
        return;
    }
    var centerScroll = $(#center).scroll(#top); //滚动条高度
    var centerHeight = $(#center).box(#height) + centerScroll; //滚动层高度 + 滚动条高度
    var(x,liY,w,liH) = $(#romlist li:current).box(#rectw,#margin,#parent);
    var titlebarHeight = $(#titlebar).box(#height); //标题栏高度
    var scrHeight = 0;

    if(listType == "1"){
        scrHeight = liY + titlebarHeight + liH + liH;
    }else{
        scrHeight = liY + titlebarHeight + liH + liH + liH;
    }

    if (scrHeight > centerHeight){
        var scro = centerScroll + liH;
        $(#center).scrollTo(0,scro, false);
    }

}