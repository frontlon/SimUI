//初始化
function Init(){
    
    //初始化全局配置
    initConfig("0");

    //改变默认窗口尺寸
    view.state = CONF.Default.WindowState.toInteger();

    //窗口面板显示状态
    if (CONF.Default.PanelPlatform.toInteger() == 0){
        $(#left_platform).style["display"] = "none"
    }
    if (CONF.Default.PanelMenu.toInteger() == 0){
        $(#left_menu).style["display"] = "none"
    }
    if (CONF.Default.PanelSidebar.toInteger() == 0){
        $(#right).style["display"] = "none"
    }

    //窗口框架宽度
    if (CONF.Default.PanelPlatformWidth != ""){
        $(#left_platform).style["width"] = CONF.Default.PanelPlatformWidth;
    }

    if (CONF.Default.PanelMenuWidth != ""){
        $(#left_menu).style["width"] = CONF.Default.PanelMenuWidth;
    }

    if (CONF.Default.PanelSidebarWidth != ""){
        $(#right).style["width"] = CONF.Default.PanelSidebarWidth;
    }

    //初始化rom
    var pf = CONF.Default.Platform;
    var menu =  $(#menulist).select("dd:current").attributes["opt"];
    ROMJSON = view.GetGameList(pf,menu,"","",SCROLL_PAGE,"","","","","")

    createRomList(1); //生成rom列表
    //生成rom数量
    var romCount = view.GetGameCount(pf,CONF.Default.Menu,"","","","","","");
    $(#rom_count_num).html = romCount; //初始化在线人数
}

//初始化配置
function initConfig(isfresh){

    var confstr = view.InitData("config",isfresh);
    CONF = JSON.parse(confstr);

    //如果初始路径不同，则刷新数据
    if(CONF.RootPath != CONF.Default.RootPath){
        view.UpdateConfig("root_path",CONF.RootPath);
    }

    //软件名称
    if(System.scanFiles(CONF.Default.SoftName)){ //图片logo
        $(#logo).html = "<img src='"+ CONF.Default.SoftName +"' />";
    }else{
         $(#logo).html =  CONF.Default.SoftName; //文字logo
    }

    //创建语言
    if (isfresh == "0"){
        createLang();
    }

    initTheme(); //创建主题
    initInterface(); //创建界面设置（背景、透明度）
    initPlatform(); //生成平台列表
    initShortcutList(); //初始化快捷工具列表
    initRomListStyle(); //初始化游戏列表样式
    initFontSize(); //初始化字体大小
    getBaseFilter(CONF.Default.Platform); //初始化基本信息过滤器

    //生成菜单
    var menujson = view.GetMenuList(CONF.Default.Platform,0);
    createMenuList(menujson);

    //激活第一个字母索引
    $(#num_search li).state.current = true;

}

//视图窗口状态改变时
function windowStateChange(evt){
    if(view.state == 1 || view.state == 3){
        view.UpdateConfig("window_state",view.state);
    }
}
//调整窗口大小
function windowSize(){
    //更新默认配置
    view.UpdateConfig("window_width",$(body).box(#width));
    view.UpdateConfig("window_height",$(body).box(#height));
}

//心跳
function heartbeat(str){
    if (str == "1"){
        $(#ping).style["display"] = "block";
    }else{
        $(#ping).style["display"] = "none";
    }
}

//创建界面设置
function initInterface(){
    

    //更新背景图
    mainView.root.$(body).style["background-image"] = [url:URL.fromPath(CONF.Default.BackgroundImage)];

    //更新背景循环方式
    var repeat = CONF.Default.BackgroundRepeat;
    if(repeat == "cover"){
        mainView.root.$(body).style["background-size"] = repeat;
        mainView.root.$(body).style["background-repeat"] = "no-repeat";
    }else{
        mainView.root.$(body).style["background-repeat"] = repeat;
        mainView.root.$(body).style["background-size"] = "contain";
    }

    //更新透明度
    var opacity = CONF.Default.OpacityContent.toFloat() / 100;
    mainView.root.$(#titlebar).style["opacity"] = opacity.toString();
    mainView.root.$(#left_platform).style["opacity"] = opacity.toString();
    mainView.root.$(#left_menu).style["opacity"] = opacity.toString();
    mainView.root.$(#center).style["opacity"] = opacity.toString();
    mainView.root.$(#right).style["opacity"] = opacity.toString();
    mainView.root.$(#menu_splitter).style["opacity"] = opacity.toString();
    mainView.root.$(#platform_splitter).style["opacity"] = opacity.toString();
    mainView.root.$(#right_splitter).style["opacity"] = opacity.toString();
}
