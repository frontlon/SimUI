//生成平台列表
function managerInit(){

    //标题
    view.windowCaption = "rom管理";

    //初始化主题
    initUiTheme();

    //创建语言
    createLang();

    //显示“请选择平台”按钮
    var dd = "<option value='0'>"+CONF.Lang.SelectPlatform +"</option>";
    
    //遍历数据，生成dom
    for(var pf in CONF.PlatformList) {
        dd += "<option value='"+ pf.Id +"'>" + pf.Name + "</option>";
    }
    self.$(#platform_rombase).html = dd; //生成dom
    self.$(#platform_media).html = dd; //生成dom
    self.$(#platform_sim).html = dd; //生成dom
    self.$(#platform_file).html = dd; //生成dom
    self.$(#platform_repeat).html = dd; //生成dom

}

//切换平台 - 游戏资料
function managerChangeRombasePlatform(platformId){
    
    if (platformId == 0){
        return;
    }

    //创建菜单
    var dd = createMenuOption(platformId);
    var menulist = self.$(#menu_rombase);
    menulist.html = "";
    if(dd != ""){
        menulist.html = dd; //生成dom
    }else{
        menulist.html = "<option value=''>全部游戏</option>"; //生成dom
    }

    //生成默认游戏列表
    var romjson = mainView.GetGameList(platformId,"","","",0,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateRombase(romjson);

    //生成分页数据
    var romCount = mainView.GetGameCount(platformId,"","","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_rombase).html = pages;
    if(pages != ""){
        $(#pages_rombase).select("li:nth-child(1)").state.current = true;
    }
}

//创建菜单选项
function createMenuOption(platformId){
    var menujson = mainView.GetMenuList(platformId,0); //读取分配列表
    var menuobj = JSON.parse(menujson);
    var dd = "<option value=''>全部游戏</option>";
    var name ="";
    var fixed = "";
    //遍历数据，生成dom
    for(var obj in menuobj) {
        if(obj.Name == "_7b9"){
            name = CONF.Lang.Uncate;
        }else{
            name = obj.Name;
        }

        dd += "<option value=\""+ obj.Name +"\">"+ name + "</option>";
    }
    return dd;
}

//选择文件
function openFile(evt) {

    var filter = "";
    if(evt.attributes.hasClass("video")){
        filter = "Video Files (*.mp4,*.wmv,*.avi)|*.mp4;*.wmv;*.avi|All Files (*.*)|*.*";
    }else if (evt.attributes.hasClass("doc") || evt.attributes.hasClass("strategy")){
        filter = "";
        filter = "Doc Files (*.txt,*.md,*.html)|*.txt;*.md;*.html|All Files (*.*)|*.*";
    }else{
        filter = "Image Files (*.png,*.jpg,*.jpeg,*.gif)|*.png;*.jpg;*.jpeg;*.gif|All Files (*.*)|*.*";
    }

    const defaultExt = "";
    const initialPath = "";
    const caption = "请选择文件";
    var url = view.selectFile("", filter, defaultExt, initialPath, caption );
    if(url){
        url = URL.toPath(url);
        url = url.split("\/").join(CONF.Separator.toString());
        url = url.split(CONF.RootPath.toString()).join("");
        evt.html = url;
    }
}

//创建分页数据
function managerCreatePages(romCount){
    var num = Math.ceil(romCount.toFloat() / 100);
    var pages = "";
    for(var i=1;i<=num;i++) {
        pages += "<li>"+i+"</li>";
    }
    return pages;
}

//切换目录 - 游戏资料
function managerChangeRombaseMenu(menuName){

    var platformId = $(#platform_rombase).value;

    //生成默认游戏列表
    var romjson = mainView.GetGameList(platformId,menuName,"","",0,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateRombase(romjson);

    var romCount = mainView.GetGameCount(platformId,menuName,"","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_rombase).html = pages;
    if(pages != ""){
        $(#pages_rombase).select("li:nth-child(1)").state.current = true;
    }
}

//创建资料rom列表
function managerCreateRombase(romjson){
    var romobj = JSON.parse(romjson);
    var romData = "";
    for(var obj in romobj) {
        if(obj.Menu == "_7b9"){
            obj.Menu = "";
        }

        romData += "<tr rid='"+ obj.Id +"'>";
        var romName = obj.RomPath.replace("\\","/");
        var romPath = romName.split("/");
        var filename = romPath[romPath.length - 1].split(".");
        romData += "<td><input|text.filename value='"+ filename[0] +"'/></td>";
        romData += "<td><input|text.name value='"+ obj.Name.toHtmlString() +"'/></td>";
        romData += "<td><input|text.year value='"+ obj.BaseYear +"'/></td>";
        romData += "<td><input|text.type value='"+ obj.BaseType +"'/></td>";
        romData += "<td><input|text.publisher value='"+ obj.BasePublisher +"'/></td>";
        romData += "<td><input|text.country value='"+ obj.BaseCountry +"'/></td>";
        romData += "<td><input|text.translate value='"+ obj.BaseTranslate +"'/></td>";
        romData += "<td><input|text.version value='"+ obj.BaseVersion +"'/></td>";
        romData += "</tr>"
    }
    $(#romlist_rombase tbody).html = romData;
}



//点击分页按钮
function managerCreateRombaseByPages(obj){
    if(obj.state.current == true){
        return;
    }
    var platformId = $(#platform_rombase).value;
    var id = obj.parent.id;
    var num = obj.html.toInteger() - 1;
    var romjson = mainView.GetGameList(platformId,"","","",num,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateRombase(romjson);
    obj.state.current = true;
    $(body).scrollTo(0,0, false);
}

//保存rom资料
function managerRombaseSave(obj){
    var tr = obj.parent.parent;
    var filename = tr.select(".filename").value;

    if(filename.trim() == ""){
        warning("文件名不能为空");
        return;
    }
    //更新资料
    var data = {
        id:tr.attributes["rid"];
        name:tr.select(".name").value,
        year:tr.select(".year").value,
        type:tr.select(".type").value,
        publisher:tr.select(".publisher").value,
        country:tr.select(".country").value,
        translate:tr.select(".translate").value,
        version:tr.select(".version").value,
    }
    mainView.SetRomBase(JSON.stringify(data));

    //更改游戏名称
    mainView.RomRename(tr.attributes["rid"],filename);
    obj.attributes.removeClass("nosave");
}

//切换平台 - 游戏资源
function managerChangeMediaPlatform(platformId){

    if (platformId == 0){
        return;
    }

    //创建菜单
    var dd = createMenuOption(platformId);
    var menulist = self.$(#menu_media);
    menulist.clear();
    if(dd != ""){
        menulist.html = dd; //生成dom
    }else{
        menulist.html = "<option value=''>全部游戏</option>"; //生成dom
    }

    //生成默认游戏列表
    var romjson = mainView.GetGameList(platformId,"","","",0,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateMedia(romjson);

    //生成分页数据
    var romCount = mainView.GetGameCount(platformId,"","","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_media).html = pages;
    if (pages != ""){
        $(#pages_media).select("li:nth-child(1)").state.current = true;
    }
}

//创建资料rom列表
function managerCreateMedia(romjson){
    var romobj = JSON.parse(romjson);
    var romData = "";
    for(var obj in romobj) {
        if(obj.Menu == "_7b9"){
            obj.Menu = "";
        }

        romData += "<tr rid='"+ obj.Id +"'>";
        var romName = obj.RomPath.replace("\\","/");
        var romPath = romName.split("/");
        var filename = romPath[romPath.length - 1].split(".");

        var thumb = getRomPicPath("thumb",obj.Platform,filename[0]);
        var snap = getRomPicPath("snap",obj.Platform,filename[0]);
        var title = getRomPicPath("title",obj.Platform,filename[0]);
        var poster = getRomPicPath("poster",obj.Platform,filename[0]);
        var packing = getRomPicPath("packing",obj.Platform,filename[0]);
        var cassette = getRomPicPath("cassette",obj.Platform,filename[0]);
        var icon = getRomPicPath("icon",obj.Platform,filename[0]);
        var gif = getRomPicPath("gif",obj.Platform,filename[0]);
        var background = getRomPicPath("background",obj.Platform,filename[0]);
        var video = getRomPicPath("video",obj.Platform,filename[0]);
        var doc = mainView.GetGameDoc("doc",obj.Id);
        var strategy = mainView.GetGameDoc("strategy",obj.Id);

        romData += "<td>"+ filename[0] +"</td>";
        romData += "<td>"+ obj.Name.toHtmlString() +"</td>";
        romData += "<td.openfile.thumb>"+ thumb +"</td>";
        romData += "<td.openfile.snap>"+ snap +"</td>";
        romData += "<td.openfile.title>"+ title +"</td>";
        romData += "<td.openfile.poster>"+ poster +"</td>";
        romData += "<td.openfile.packing>"+ packing +"</td>";
        romData += "<td.openfile.cassette>"+ cassette +"</td>";
        romData += "<td.openfile.icon>"+ icon +"</td>";
        romData += "<td.openfile.gif>"+ gif +"</td>";
        romData += "<td.openfile.background>"+ background +"</td>";
        romData += "<td.openfile.video>"+ video +"</td>";
        romData += "<td.openfile.doc>"+ doc +"</td>";
        romData += "<td.openfile.strategy>"+ strategy +"</td>";
        romData += "</tr>"
    }
    $(#romlist_media tbody).html = romData;
}

//切换目录 - 游戏资源
function managerChangeMediaMenu(menuName){

    var platformId = $(#platform_media).value;

    //生成默认游戏列表
    var romjson = mainView.GetGameList(platformId,menuName,"","",0,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateMedia(romjson);

    var romCount = mainView.GetGameCount(platformId,menuName,"","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_media).html = pages;
    if(pages != ""){
        $(#pages_media).select("li:nth-child(1)").state.current = true;
    }
}


//点击分页按钮
function managerCreateMediaByPages(obj){
    if(obj.state.current == true){
        return;
    }
    var platformId = $(#platform_media).value;
    var id = obj.parent.id;
    var num = obj.html.toInteger() - 1;
    var romjson = mainView.GetGameList(platformId,"","","",num,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateMedia(romjson);
    obj.state.current = true;
    $(body).scrollTo(0,0, false);
}


//切换平台 - 游戏资源
function managerChangeSimulatorPlatform(platformId){

    if (platformId == 0){
        return;
    }

    //创建菜单
    var dd = createMenuOption(platformId);
    var menulist = self.$(#menu_sim);
    menulist.clear();
    if(dd != ""){
        menulist.html = dd; //生成dom
    }else{
        menulist.html = "<option value=''>全部游戏</option>"; //生成dom
    }

    //创建模拟器列表
    var sim = "<option value='0'>"+CONF.Lang.SelectSimulator +"</option>";
    for(var pf in CONF.Platform[platformId.toString()].SimList) {
        sim += "<option value='"+ CONF.Platform[platformId.toString()].SimList[pf].Id +"'>"+ CONF.Platform[platformId.toString()].SimList[pf].Name +"</option>"
    }
    $(#select_sim).html = sim;

    //生成默认游戏列表
    var romjson = mainView.GetGameList(platformId,"","","",0,"","","","","","");
    $(#romlist_sim tbody).html = "";
    managerCreateSimulator(romjson);

    //生成分页数据
    var romCount = mainView.GetGameCount(platformId,"","","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_sim).html = pages;
    if (pages != ""){
        $(#pages_sim).select("li:nth-child(1)").state.current = true;
    }
}

//创建rom模拟器列表
function managerCreateSimulator(romjson){

    var romobj = JSON.parse(romjson);
    var romData = "";
    for(var obj in romobj) {
   
        romData += "<tr rid='"+ obj.Id +"'>";
        var romName = obj.RomPath.replace("\\","/");
        var romPath = romName.split("/");
        var filename = romPath[romPath.length - 1].split(".");
        
        var simConf = {};
        var unzipText = "否";
        var unzip = 0;
        var bootFile = "";
        var simName = "";
        var simId = 0;
        var cmd = "";
        var lua = "";
        
        if(obj.SimId == 0){
            if(CONF.Platform[obj.Platform.toString()].UseSim != undefined){
                simName = CONF.Platform[obj.Platform.toString()].UseSim.Name;
                simId = CONF.Platform[obj.Platform.toString()].UseSim.Id;
                cmd = CONF.Platform[obj.Platform.toString()].UseSim.Cmd;
            }
        }else{

            if(CONF.Platform[obj.Platform.toString()].SimList[obj.SimId.toString()] != undefined){
                simName = CONF.Platform[obj.Platform.toString()].SimList[obj.SimId.toString()].Name;
                simId = CONF.Platform[obj.Platform.toString()].SimList[obj.SimId.toString()].Id;
                cmd = CONF.Platform[obj.Platform.toString()].SimList[obj.SimId.toString()].Cmd;

            }else{
                if(CONF.Platform[obj.Platform.toString()].UseSim != undefined){
                    simName = CONF.Platform[obj.Platform.toString()].UseSim.Name;
                    simId = CONF.Platform[obj.Platform.toString()].UseSim.Id;
                    cmd = CONF.Platform[obj.Platform.toString()].UseSim.Cmd;
                }
            }
        }

        if(obj.SimConf != "" && obj.SimConf != "{}"){
            simConf = JSON.parse(obj.SimConf);
            simConf = simConf[simId.toString()];
            if(simConf != undefined){
                unzipText = simConf.Unzip == 1 ? "是" : "否";
                bootFile = simConf.File;
                cmd = simConf.Cmd;
                unzip = simConf.Unzip;
                lua = simConf.Lua;
            }
        }else{
            simConf = CONF.Platform[obj.Platform.toString()].UseSim;
            unzipText = simConf.Unzip == 1 ? "是" : "否";
            bootFile = "";
            unzip = simConf.Unzip;
            lua = simConf.Lua;
        }

        romData += "<td><input type='checkbox' value='"+ obj.Id +"' class='check_simulator' id='check_simulator_"+ obj.Id +"' /></td>";
        romData += "<td>"+ filename[0] +"</td>";
        romData += "<td>"+ obj.Name.toHtmlString() +"</td>";
        romData += "<td.simulator_id opt='"+ simId +"'>"+ simName +"</td>";
        romData += "<td><input|text.simulator_cmd value='"+ cmd +"'></td>";
        romData += "<td.simulator_unzip opt='"+ unzip +"'>"+ unzipText +"</td>";
        romData += "<td><input|text.simulator_file value='"+ bootFile +"'></td>";
        romData += "<td>"+ lua +"</td>";
        romData += "</tr>"
    }
    $(#romlist_sim tbody).html = romData;
}

//切换目录 - 模拟器管理
function managerChangeSimulatorMenu(menuName){

    var platformId = $(#platform_sim).value;

    //生成默认游戏列表
    var romjson = mainView.GetGameList(platformId,menuName,"","",0,"","","","","","");
    $(#romlist_sim tbody).html = "";
    managerCreateSimulator(romjson);

    var romCount = mainView.GetGameCount(platformId,menuName,"","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_sim).html = pages;
    if(pages != ""){
        $(#pages_sim).select("li:nth-child(1)").state.current = true;
    }
}

//点击分页按钮
function managerCreateSimulatorByPages(obj){
    if(obj.state.current == true){
        return;
    }
    var platformId = $(#platform_sim).value;
    var id = obj.parent.id;
    var num = obj.html.toInteger() - 1;
    var romjson = mainView.GetGameList(platformId,"","","",num,"","","","","","");
    $(#romlist_sim tbody).html = "";
    managerCreateSimulator(romjson);
    obj.state.current = true;
    $(body).scrollTo(0,0, false);
}

//保存rom资料
function managerSimulatorSave(obj){
    var tr = obj.parent.parent;
    var romId = tr.attributes["rid"];
    var simId = tr.select(".simulator_id").attributes["opt"];
    var unzip = tr.select(".simulator_unzip").attributes["opt"];
    var cmd = tr.select(".simulator_cmd").value;
    var file = tr.select(".simulator_file").value;
    var data = {
        cmd:cmd,
        unzip:unzip,
        file:file,
    }
    alert(simId);
    var datastr = JSON.stringify(data);
    mainView.UpdateRomCmd(romId,simId,datastr);

    obj.attributes.removeClass("nosave");
}

//改变rom模拟器
function managerChangeRomSimulator(obj){
 
    var checks = $$(#romlist_sim .check_simulator:checked);
    if(obj.value == 0){
        return;
    }
    if(checks.length == 0){
    alert("您没有选择rom");
        return;
    }

    var arr = [];
    for(var c in checks){
        arr.push(c.value);
    }

    var ids = arr.join(",");
    mainView.SetRomSimulator(ids,obj.value);

    //回显列表数据
    var romlist = JSON.parse(mainView.GetGameListByIds(ids));

    var simConf = "";
    var gamelist = new Object();
    for(var r in romlist){
        if(r.SimConf != "" && r.SimConf != "{}"){
            simConf = JSON.parse(r.SimConf);
            gamelist[r.Id] = simConf;
        }
    }

    var platformId = $(#platform_sim).value;
    var conf = CONF.Platform[platformId.toString()].SimList[obj.value.toString()];

    if(conf != undefined){
        for(var c in checks){
            c.parent.parent.select(".simulator_cmd").value = conf.Cmd;
            if(gamelist[c.value.toInteger()] != undefined && gamelist[c.value.toInteger()][obj.value.toString()] != undefined){
                c.parent.parent.select(".simulator_cmd").text = gamelist[c.value.toInteger()][obj.value.toString()].Cmd;     
            }else{
                c.parent.parent.select(".simulator_cmd").text = conf.Cmd;
            }
            c.parent.parent.select(".simulator_id").text = conf.Name;
        }
    }

    $(#select_sim).value = 0;
}