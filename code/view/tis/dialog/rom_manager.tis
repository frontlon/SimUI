//生成平台列表
function managerInit(){

    //标题
    view.windowCaption = CONF.Lang.RomManager;

    //初始化主题
    initUiTheme();

    //创建语言
    createLang();

    //显示“请选择平台”按钮
    var dd = "<option value='0'>"+CONF.Lang.SelectPlatform +"</option>";
    
    //遍历数据，生成dom
    for(var pf in CONF.PlatformList) {
        dd += "<option value='"+ pf.Id +"'>" + pf.Name + "</option>";
    }
    self.$(#platform_rombase).html = dd; //资料管理
    self.$(#platform_media).html = dd; //资源管理
    self.$(#platform_sim).html = dd; //模拟器管理
    self.$(#platform_file).html = dd; //文件管理
    self.$(#platform_repeat).html = dd; //rom去重
    self.$(#platform_zombie).html = dd; //无效资源清理

}

/**
 * 游戏资料管理
 */

//切换平台 - 游戏资料管理
function managerChangeRombasePlatform(platformId){
    
    if (platformId == 0){
        return;
    }

    //创建菜单
    var dd = createMenuOption(platformId);
    var menulist = self.$(#menu_rombase);
    menulist.clear();
    if(dd != ""){
        menulist.html = dd; //生成dom
    }else{
        menulist.html = "<option value=''>"+CONF.Lang.AllGames+"</option>"; //生成dom
    }

    //生成默认游戏列表
    var romjson = mainView.GetGameList(0,platformId,"","","",0,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateRombase(romjson);

    //生成分页数据
    var romCount = mainView.GetGameCount(0,platformId,"","","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_rombase).html = pages;
    if(pages != ""){
        $(#pages_rombase).select("li:nth-child(1)").state.current = true;
    }
}

//创建菜单选项 - 游戏资料管理
function createMenuOption(platformId){
    var menujson = mainView.GetMenuList(platformId,0); //读取分配列表
    var menuobj = JSON.parse(menujson);
    var dd = "<option value=''>"+CONF.Lang.AllGames+"</option>";
    var name ="";
    var fixed = "";
    //遍历数据，生成dom
    for(var obj in menuobj) {
        if(obj.Name == "_7b9"){
            name = CONF.Lang.Uncate;
        }else{
            name = obj.Name;
        }

        dd += "<option value=\""+ obj.Name +"\">"+ name + "</option>";
    }
    return dd;
}

//选择文件 - 游戏资料管理
function openFile(evt) {

    var filter = "";
    if(evt.attributes.hasClass("video")){
        filter = "Video Files (*.mp4,*.wmv,*.avi)|*.mp4;*.wmv;*.avi|All Files (*.*)|*.*";
    }else if (evt.attributes.hasClass("doc") || evt.attributes.hasClass("strategy")){
        filter = "";
        filter = "Doc Files (*.txt,*.md,*.html)|*.txt;*.md;*.html|All Files (*.*)|*.*";
    }else{
        filter = "Image Files (*.png,*.jpg,*.jpeg,*.gif)|*.png;*.jpg;*.jpeg;*.gif|All Files (*.*)|*.*";
    }

    const defaultExt = "";
    const initialPath = "";
    const caption = CONF.Lang.SelectFile;
    var url = view.selectFile("", filter, defaultExt, initialPath, caption );
    if(url){
        url = URL.toPath(url);
        url = url.split("\/").join(CONF.Separator.toString());
        url = url.split(CONF.RootPath.toString()).join("");
        evt.select("input[type=text]").value = url;
    }
}

//创建分页数据 - 游戏资料管理
function managerCreatePages(romCount){
    var num = Math.ceil(romCount.toFloat() / 100);
    var pages = "";
    for(var i=1;i<=num;i++) {
        pages += "<li>"+i+"</li>";
    }
    return pages;
}

//切换目录 - 游戏资料管理
function managerChangeRombaseMenu(menuName){

    var platformId = $(#platform_rombase).value;

    //生成默认游戏列表
    var romjson = mainView.GetGameList(0,platformId,menuName,"","",0,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateRombase(romjson);

    var romCount = mainView.GetGameCount(0,platformId,menuName,"","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_rombase).html = pages;
    if(pages != ""){
        $(#pages_rombase).select("li:nth-child(1)").state.current = true;
    }
}

//创建资料rom列表 - 游戏资料管理
function managerCreateRombase(romjson){
    var romobj = JSON.parse(romjson);
    var romData = "";
    for(var obj in romobj) {
        if(obj.Menu == "_7b9"){
            obj.Menu = "";
        }

        romData += "<tr rid='"+ obj.Id +"'>";
        var romName = obj.RomPath.replace("\\","/");
        var romPath = romName.split("/");
        var filename = romPath[romPath.length - 1].split(".");
        romData += "<td><input|text.filename value='"+ filename[0] +"'/></td>";
        romData += "<td><input|text.name value='"+ obj.Name.toHtmlString() +"'/></td>";
        romData += "<td><input|text.year value='"+ obj.BaseYear +"'/></td>";
        romData += "<td><input|text.type value='"+ obj.BaseType +"'/></td>";
        romData += "<td><input|text.publisher value='"+ obj.BasePublisher +"'/></td>";
        romData += "<td><input|text.country value='"+ obj.BaseCountry +"'/></td>";
        romData += "<td><input|text.translate value='"+ obj.BaseTranslate +"'/></td>";
        romData += "<td><input|text.version value='"+ obj.BaseVersion +"'/></td>";
        romData += "</tr>"
    }
    $(#romlist_rombase tbody).html = romData;
}

//点击分页按钮 - 游戏资料管理
function managerCreateRombaseByPages(obj){
    if(obj.state.current == true){
        return;
    }
    var platformId = $(#platform_rombase).value;
    var id = obj.parent.id;
    var num = obj.html.toInteger() - 1;
    var romjson = mainView.GetGameList(0,platformId,"","","",num,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateRombase(romjson);
    obj.state.current = true;
    $(body).scrollTo(0,0, false);
}

//保存rom资料 - 游戏资料管理
function managerRombaseSave(obj){
    var tr = obj.parent.parent;
    var filename = tr.select(".filename").value;

    if(filename.trim() == ""){
        warning(CONF.Lang.FilenameNotEmpty);
        return;
    }
    //更新资料
    var data = {
        id:tr.attributes["rid"];
        name:tr.select(".name").value,
        year:tr.select(".year").value,
        type:tr.select(".type").value,
        publisher:tr.select(".publisher").value,
        country:tr.select(".country").value,
        translate:tr.select(".translate").value,
        version:tr.select(".version").value,
    }
    mainView.SetRomBase(JSON.stringify(data));

    //更改游戏名称
    mainView.RomRename(tr.attributes["rid"],filename);
    obj.attributes.removeClass("nosave");
}

/**
 * 资源管理
 */

//切换平台 - 资源管理
function managerChangeMediaPlatform(platformId){

    if (platformId == 0){
        return;
    }

    //创建菜单
    var dd = createMenuOption(platformId);
    var menulist = self.$(#menu_media);
    menulist.clear();
    if(dd != ""){
        menulist.html = dd; //生成dom
    }else{
        menulist.html = "<option value=''>"+CONF.Lang.AllGames+"</option>"; //生成dom
    }

    //生成默认游戏列表
    var romjson = mainView.GetGameList(0,platformId,"","","",0,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateMedia(romjson);

    //生成分页数据
    var romCount = mainView.GetGameCount(0,platformId,"","","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_media).html = pages;
    if (pages != ""){
        $(#pages_media).select("li:nth-child(1)").state.current = true;
    }
}

//创建资料rom列表 - 资源管理
function managerCreateMedia(romjson){
    var romobj = JSON.parse(romjson);
    var romData = "";
    for(var obj in romobj) {
        if(obj.Menu == "_7b9"){
            obj.Menu = "";
        }

        romData += "<tr rid='"+ obj.Id +"'>";
        var romName = obj.RomPath.replace("\\","/");
        var romPath = romName.split("/");
        var filename = romPath[romPath.length - 1].split(".");

        var thumb = getRomPicPath("thumb",obj.Platform,filename[0]);
        var snap = getRomPicPath("snap",obj.Platform,filename[0]);
        var title = getRomPicPath("title",obj.Platform,filename[0]);
        var poster = getRomPicPath("poster",obj.Platform,filename[0]);
        var packing = getRomPicPath("packing",obj.Platform,filename[0]);
        var cassette = getRomPicPath("cassette",obj.Platform,filename[0]);
        var icon = getRomPicPath("icon",obj.Platform,filename[0]);
        var gif = getRomPicPath("gif",obj.Platform,filename[0]);
        var background = getRomPicPath("background",obj.Platform,filename[0]);
        var video = getRomPicPath("video",obj.Platform,filename[0]);
       // var doc = mainView.GetGameDoc("doc",obj.Id);
        //var strategy = mainView.GetGameDoc("strategy",obj.Id);

        romData += "<td>"+ filename[0] +"</td>";
        romData += "<td>"+ obj.Name.toHtmlString() +"</td>";
        romData += "<td.openfile><input|text.thumb value='"+ thumb +"' /></td>";
        romData += "<td.openfile><input|text.snap value='"+ snap +"' /></td>";
        romData += "<td.openfile><input|text.title value='"+ title +"' /></td>";
        romData += "<td.openfile><input|text.poster value='"+ poster +"' /></td>";
        romData += "<td.openfile><input|text.packing value='"+ packing +"' /></td>";
        romData += "<td.openfile><input|text.cassette value='"+ cassette +"' /></td>";
        romData += "<td.openfile><input|text.icon value='"+ icon +"' /></td>";
        romData += "<td.openfile><input|text.gif value='"+ gif +"' /></td>";
        romData += "<td.openfile><input|text.background value='"+ background +"' /></td>";
        romData += "<td.openfile><input|text.video value='"+ video +"' /></td>";
        romData += "<td.openfile><input|text.doc value='"+CONF.Lang.ClickEdit+"' readonly='readonly' /></td>";
        romData += "<td.openfile><input|text.strategy value='"+CONF.Lang.ClickEdit+"' readonly='readonly' /></td>";
        romData += "</tr>"
    }
    $(#romlist_media tbody).html = romData;
}

//切换目录 - 资源管理
function managerChangeMediaMenu(menuName){

    var platformId = $(#platform_media).value;

    //生成默认游戏列表
    var romjson = mainView.GetGameList(0,platformId,menuName,"","",0,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateMedia(romjson);

    var romCount = mainView.GetGameCount(0,platformId,menuName,"","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_media).html = pages;
    if(pages != ""){
        $(#pages_media).select("li:nth-child(1)").state.current = true;
    }
}


//点击分页按钮 - 资源管理
function managerCreateMediaByPages(obj){
    if(obj.state.current == true){
        return;
    }
    var platformId = $(#platform_media).value;
    var id = obj.parent.id;
    var num = obj.html.toInteger() - 1;
    var romjson = mainView.GetGameList(0,platformId,"","","",num,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateMedia(romjson);
    obj.state.current = true;
    $(body).scrollTo(0,0, false);
}

//选择文件 - 资源管理
function managerSetMedia(obj) {
    var classes = obj.attributes["class"].split(" ");
    var id = obj.parent.parent.attributes["rid"];
    var uri = obj.value;
    var opt = classes[0];
    obj.attributes.removeClass("nosave");
    if(uri == ""){
        mainView.DeleteThumbs(opt,id);
        alert(CONF.Lang.DeletePicSuccess);
    }else{
        mainView.EditRomThumbs(opt,id,uri);
    }
    

}

/**
 * 模拟器管理
 */

//切换平台 - 模拟器管理
function managerChangeSimulatorPlatform(platformId){

    if (platformId == 0){
        return;
    }

    //创建菜单
    var dd = createMenuOption(platformId);
    var menulist = self.$(#menu_sim);
    menulist.clear();
    if(dd != ""){
        menulist.html = dd; //生成dom
    }else{
        menulist.html = "<option value=''>"+ CONF.Lang.AllGames +"</option>"; //生成dom
    }

    //创建模拟器列表
    var sim = "<option value='0'>"+CONF.Lang.SelectSimulator +"</option>";
    for(var pf in CONF.Platform[platformId.toString()].SimList) {
        sim += "<option value='"+ CONF.Platform[platformId.toString()].SimList[pf].Id +"'>"+ CONF.Platform[platformId.toString()].SimList[pf].Name +"</option>"
    }
    $(#select_sim).html = sim;

    //生成默认游戏列表
    var romjson = mainView.GetGameList(0,platformId,"","","",0,"","","","","","");
    $(#romlist_sim tbody).html = "";
    managerCreateSimulator(romjson);

    //生成分页数据
    var romCount = mainView.GetGameCount(0,platformId,"","","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_sim).html = pages;
    if (pages != ""){
        $(#pages_sim).select("li:nth-child(1)").state.current = true;
    }
}

//创建rom模拟器列表 - 模拟器管理
function managerCreateSimulator(romjson){

    var romobj = JSON.parse(romjson);
    var romData = "";
    for(var obj in romobj) {
   
        romData += "<tr rid='"+ obj.Id +"'>";
        var romName = obj.RomPath.replace("\\","/");
        var romPath = romName.split("/");
        var filename = romPath[romPath.length - 1].split(".");
        
        var simConf = {};
        var unzipText = CONF.Lang.No;
        var unzip = 0;
        var bootFile = "";
        var simName = "";
        var simId = 0;
        var cmd = "";
        var lua = "";
        
        if(obj.SimId == 0){
            if(CONF.Platform[obj.Platform.toString()].UseSim != undefined){
                simName = CONF.Platform[obj.Platform.toString()].UseSim.Name;
                simId = CONF.Platform[obj.Platform.toString()].UseSim.Id;
            }
        }else{

            if(CONF.Platform[obj.Platform.toString()].SimList[obj.SimId.toString()] != undefined){
                simName = CONF.Platform[obj.Platform.toString()].SimList[obj.SimId.toString()].Name;
                simId = CONF.Platform[obj.Platform.toString()].SimList[obj.SimId.toString()].Id;

            }else{
                if(CONF.Platform[obj.Platform.toString()].UseSim != undefined){
                    simName = CONF.Platform[obj.Platform.toString()].UseSim.Name;
                    simId = CONF.Platform[obj.Platform.toString()].UseSim.Id;
                }
            }
        }

        if(obj.SimConf != "" && obj.SimConf != "{}"){
            simConf = JSON.parse(obj.SimConf);
            simConf = simConf[simId.toString()];
            if(simConf != undefined){
                unzipText = simConf.Unzip == 1 ? CONF.Lang.Yes : CONF.Lang.No;
                bootFile = simConf.File;
                if(simConf.Cmd != ""){
                    cmd = simConf.Cmd;
                }
                unzip = simConf.Unzip;
                lua = simConf.Lua;
            }
        }else{
            simConf = CONF.Platform[obj.Platform.toString()].UseSim;
            unzipText = simConf.Unzip == 1 ? CONF.Lang.Yes : CONF.Lang.No;
            bootFile = "";
            unzip = simConf.Unzip;
            lua = simConf.Lua;
        }

        romData += "<td><input type='checkbox' value='"+ obj.Id +"' class='check_simulator' id='check_simulator_"+ obj.Id +"' /></td>";
        romData += "<td>"+ filename[0] +"</td>";
        romData += "<td>"+ obj.Name.toHtmlString() +"</td>";
        romData += "<td.simulator_name opt='"+ simId +"'>"+ simName +"</td>";
        romData += "<td><input|text.simulator_cmd value='"+ cmd +"'></td>";
        romData += "<td.simulator_unzip opt='"+ unzip +"'>"+ unzipText +"</td>";
        romData += "<td><input|text.simulator_file value='"+ bootFile +"'></td>";
        romData += "<td.simulator_lua>"+ lua +"</td>";
        romData += "</tr>"
    }
    $(#romlist_sim tbody).html = romData;
}

//切换目录 - 模拟器管理
function managerChangeSimulatorMenu(menuName){

    var platformId = $(#platform_sim).value;

    //生成默认游戏列表
    var romjson = mainView.GetGameList(0,platformId,menuName,"","",0,"","","","","","");
    $(#romlist_sim tbody).html = "";
    managerCreateSimulator(romjson);

    var romCount = mainView.GetGameCount(0,platformId,menuName,"","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_sim).html = pages;
    if(pages != ""){
        $(#pages_sim).select("li:nth-child(1)").state.current = true;
    }
}

//点击分页按钮 - 模拟器管理
function managerCreateSimulatorByPages(obj){
    if(obj.state.current == true){
        return;
    }
    var platformId = $(#platform_sim).value;
    var id = obj.parent.id;
    var num = obj.html.toInteger() - 1;
    var romjson = mainView.GetGameList(0,platformId,"","","",num,"","","","","","");
    $(#romlist_sim tbody).html = "";
    managerCreateSimulator(romjson);
    obj.state.current = true;
    $(body).scrollTo(0,0, false);
}

//保存模拟器参数 - 模拟器管理
function managerSimulatorSave(obj){
    var tr = obj.parent.parent;
    var romId = tr.attributes["rid"];
    var simId = tr.select(".simulator_name").attributes["opt"];
    var unzip = tr.select(".simulator_unzip").attributes["opt"];
    var cmd = tr.select(".simulator_cmd").value;
    var file = tr.select(".simulator_file").value;
    var lua = tr.select(".simulator_lua").text;
    var data = {
        cmd:cmd,
        unzip:unzip.toString(),
        file:file,
        lua:lua,    
    }
    var datastr = JSON.stringify(data);
    mainView.UpdateRomCmd(romId,simId,datastr);

    obj.attributes.removeClass("nosave");

}

//改变rom模拟器 - 模拟器管理
function managerChangeRomSimulator(obj){
 
    var checks = $$(#romlist_sim .check_simulator:checked);
    if(obj.value == 0){
        return;
    }
    if(checks.length == 0){
    alert(CONF.Lang.NotSelectGames);
        return;
    }

    var arr = [];
    for(var c in checks){
        arr.push(c.value);
    }

    var ids = arr.join(",");
    mainView.SetRomSimulator(ids,obj.value);

    //回显列表数据
    var romlist = JSON.parse(mainView.GetGameListByIds(ids));

    var simConf = "";
    var gamelist = new Object();
    for(var r in romlist){
        if(r.SimConf != "" && r.SimConf != "{}"){
            simConf = JSON.parse(r.SimConf);
            gamelist[r.Id] = simConf;
        }
    }

    var platformId = $(#platform_sim).value;
    var conf = CONF.Platform[platformId.toString()].SimList[obj.value.toString()];

    if(conf != undefined){
        for(var c in checks){
            c.parent.parent.select(".simulator_cmd").value = conf.Cmd;
            if(gamelist[c.value.toInteger()] != undefined && gamelist[c.value.toInteger()][obj.value.toString()] != undefined){
                c.parent.parent.select(".simulator_cmd").text = gamelist[c.value.toInteger()][obj.value.toString()].Cmd;
                c.parent.parent.select(".simulator_unzip").text = gamelist[c.value.toInteger()][obj.value.toString()].Unzip;
                c.parent.parent.select(".simulator_file").text = gamelist[c.value.toInteger()][obj.value.toString()].File;
                c.parent.parent.select(".simulator_lua").text = gamelist[c.value.toInteger()][obj.value.toString()].Lua;
            }else{
                c.parent.parent.select(".simulator_cmd").text = "";
                c.parent.parent.select(".simulator_unzip").text = "";
                c.parent.parent.select(".simulator_file").text = "";
                c.parent.parent.select(".simulator_lua").text = "";
            }
            c.parent.parent.select(".simulator_name").text = conf.Name;
            c.parent.parent.select(".simulator_name").attributes["opt"] = conf.Id;
        }
    }

    $(#select_sim).value = 0;
}

//解压后运行 - 模拟器管理
function managerChangeRomUnzipRunGame(obj){

    var checks = $$(#romlist_sim .check_simulator:checked);
    if(obj.value.toString() == ""){
        return;
    }
    if(checks.length == 0){
    alert(CONF.Lang.NotSelectGames);
        return;
    }

    var text = obj.value == 1 ? CONF.Lang.Yes:CONF.Lang.No;
    for(var c in checks){

    var tr = c.parent.parent;
    var romId = tr.attributes["rid"];
    var simId = tr.select(".simulator_name").attributes["opt"];
    var unzip = obj.value;
    var cmd = tr.select(".simulator_cmd").value;
    var file = tr.select(".simulator_file").value;
    var lua = tr.select(".simulator_lua").text;
    var data = {
        cmd:cmd,
        unzip:unzip.toString(),
        file:file,
        lua:lua,
    }
    var datastr = JSON.stringify(data);

    mainView.UpdateRomCmd(romId,simId,datastr);

    c.parent.parent.select(".simulator_unzip").text = text;
    $(#select_unzip).value = "";

    }

}

//选择文件 - 模拟器管理
function openFileLua(evt) {

    var checks = $$(#romlist_sim .check_simulator:checked);
    if(checks.length == 0){
    alert(CONF.Lang.NotSelectGames);
        return;
    }

    var filter = "Lua Files (*.lua)|*.lua|All Files (*.*)|*.*";

    const defaultExt = "";
    const initialPath = "";
    const caption = CONF.Lang.SelectFile;
    var url = view.selectFile("", filter, defaultExt, initialPath, caption );
    if(url){
        url = URL.toPath(url);
        url = url.split("\/").join(CONF.Separator.toString());
        url = url.split(CONF.RootPath.toString()).join("");
        evt.html = url;
        for(var c in checks){
            var tr = c.parent.parent;
            var romId = tr.attributes["rid"];
            var simId = tr.select(".simulator_name").attributes["opt"];
            var unzip = tr.select(".simulator_unzip").attributes["opt"];
            var cmd = tr.select(".simulator_cmd").value;
            var file = tr.select(".simulator_file").value;
            var lua = url;
            var data = {
                cmd:cmd,
                unzip:unzip.toString(),
                file:file,
                lua:lua,
            }
            var datastr = JSON.stringify(data);
            mainView.UpdateRomCmd(romId,simId,datastr);
            c.parent.parent.select(".simulator_lua").text = url;
        }
    }
}

/**
 * 文件管理
 **/

 //切换平台 - 文件管理
function managerChangeRomFilePlatform(platformId){
    
    if (platformId == 0){
        return;
    }

    //创建菜单
    var dd = createMenuOption(platformId);
    var menulist = self.$(#menu_file);
    menulist.clear();
    if(dd != ""){
        menulist.html = dd; //生成dom
    }else{
        menulist.html = "<option value=''>"+ CONF.Lang.AllGames +"</option>"; //生成dom
    }

    //生成默认游戏列表
    var romjson = mainView.GetGameList(1,platformId,"","","",0,"","","","","","");
    $(#romlist_rombase tbody).html = "";
    managerCreateRomFile(romjson);

    //生成分页数据
    var romCount = mainView.GetGameCount(1,platformId,"","","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_file).html = pages;
    if(pages != ""){
        $(#pages_file).select("li:nth-child(1)").state.current = true;
    }
}

//创建资料rom列表 - 文件管理
function managerCreateRomFile(romjson){
    var romobj = JSON.parse(romjson);
    var romData = "";
    for(var obj in romobj) {
        if(obj.Menu == "_7b9"){
            obj.Menu = "";
        }

        var hide = obj.Hide == 1? CONF.Lang.Show:CONF.Lang.Hide;

        romData += "<tr rid='"+ obj.Id +"'>";
        var romName = obj.RomPath.replace("\\","/");
        var romPath = romName.split("/");
        var filename = romPath[romPath.length - 1].split(".");
        romData += "<td><input class='check_file' type='checkbox' value='"+ obj.Id +"' class='check_file' /></td>";
        romData += "<td>"+ filename[0] +"</td>";
        romData += "<td>"+ obj.Name.toHtmlString() +"</td>";
        romData += "<td>" + obj.Menu + "</td>";
        romData += "<td class='file_hide' opt='"+ obj.Hide +"'>"+ hide +"</td>";
        romData += "</tr>"
    }
    $(#romlist_file tbody).html = romData;
}

//切换目录 - 文件管理
function managerChangeRomFileMenu(menuName){

    var platformId = $(#platform_file).value;

    //生成默认游戏列表
    var romjson = mainView.GetGameList(1,platformId,menuName,"","",0,"","","","","","");
    $(#romlist_file tbody).html = "";
    managerCreateRomFile(romjson);

    var romCount = mainView.GetGameCount(1,platformId,menuName,"","","","","","",""); //必须在获取rom的方法下面
    var pages = managerCreatePages(romCount);
    $(#pages_file).html = pages;
    if(pages != ""){
        $(#pages_file).select("li:nth-child(1)").state.current = true;
    }
}

//点击分页按钮 - 文件管理
function managerCreateRomFileByPages(obj){
    if(obj.state.current == true){
        return;
    }
    var platformId = $(#platform_file).value;
    var id = obj.parent.id;
    var num = obj.html.toInteger() - 1;
    var romjson = mainView.GetGameList(1,platformId,"","","",num,"","","","","","");
    $(#romlist_file tbody).html = "";
    managerCreateRomFile(romjson);
    obj.state.current = true;
    $(body).scrollTo(0,0, false);
}

//解压后运行 - 文件管理
function managerChangeRomHide(hide){
    var checks = $$(#romlist_file .check_file:checked);
    if(hide.toString() == ""){
        return;
    }
    if(checks.length == 0){
    alert(CONF.Lang.NotSelectGames);
        return;
    }

    var arr = [];
    for(var c in checks){
        arr.push(c.value);
    }
    var ids = arr.join(",");
    var text = hide == 1 ? CONF.Lang.Hide:CONF.Lang.Show;

    mainView.SetHide(ids,hide);
    for(var c in checks){
        c.parent.parent.select(".file_hide").text = text;
    }
    $(#select_hide).value = "";

}


//移动文件 - 文件管理
function managerFileMoveRom(){

    var checks = $$(#romlist_file .check_file:checked);
    if(checks.length == 0){
    alert(CONF.Lang.NotSelectGames);
        return;
    }

    var arr = [];
    for(var c in checks){
        arr.push(c.value);
    }
    var ids = arr.join(",");

    var platform = view.dialog({
        url:self.url(ROOTPATH + "move_rom.html"),
        width:self.toPixels(300dip),
        height:self.toPixels(565dip),
        parameters: {
            id:ids;
        };
    });
    if(platform == "1"){
        alert(CONF.Lang.RomMoveSuccess);
    }
}

//删除文件 - 文件管理
function managerFileDelete(){

    var checks = $$(#romlist_file .check_file:checked);
    if(checks.length == 0){
    alert(CONF.Lang.NotSelectGames);
        return;
    }

    var arr = [];
    for(var c in checks){
        arr.push(c.value);
    }


    //确认窗口
    var result = view.msgbox {
        type:#question, 
        content:CONF.Lang.DeleteRomConfirm, 
        caption:CONF.Lang.DeleteRom,
        buttons:[
            {id:#yes,text:CONF.Lang.Delete},
            {id:#cancel,text:CONF.Lang.Cancel,role:"default-button"}
        ]
    };

    if (result != "yes"){
        return true;
    }


    for(var id in arr) {
        mainView.DeleteRom(id); //删除实体文件
        //删除页面上的dom
    }

    alert(CONF.Lang.DeleteSuccess); //删除成功

}

/**
 * 文件去重
 **/

//检测重复 - 文件去重
function managerCheckRepeat(){
    var platformId = $(#platform_repeat).value;

    if (platformId == "0"){
        alert(CONF.Lang.SelectPlatform);
        return;
    }

    var romjson = mainView.CheckRomRepeat(platformId);
    var romobj = JSON.parse(romjson);

    if(romobj.length == 0 ){
        alert(CONF.Lang.DuplicateFilesNotFound);
        return;
    }

    if(romobj.length > 500 ){
        alert(CONF.Lang.TipDuplicateFilesFound);
        return;
    }

    var romData = "";
    for(var obj in romobj) {
        romData += "<tr opt='" + obj.path + "' rid='"+obj.id+"'>";
        romData += "<td><input class='check_repeat' type='checkbox' value='"+ obj.id +"' /></td>";
        romData += "<td>"+ obj.name +"</td>";
        romData += "<td>"+ obj.path +"</td>";
        romData += "<td>"+ obj.size +"</td>";
        romData += "<td><button class='rungame'>"+CONF.Lang.Run+"</button></td>";
        romData += "</tr>"
    }
    $(#romlist_repeat tbody).html = romData;



}

//移动文件 - 文件去重
function managerFileRepeatMoveRom(){

    var checks = $$(#romlist_repeat .check_repeat:checked);
    if(checks.length == 0){
        alert(CONF.Lang.NotSelectGames);
        return;
    }

    var paths = [];
    for(var c in checks){
        paths.push(c.parent.parent.attributes["opt"]);
    }

    var url = view.selectFolder(CONF.Lang.SelectFolder);
    if(url){
        url = URL.toPath(url);
        url = url.split("\/").join(CONF.Separator.toString());
        url = url.split(CONF.RootPath.toString()).join("");

        mainView.MoveRomByFileManager(JSON.stringify(paths),url);
        managerCheckRepeat();
    }
}

//删除文件 - 文件去重
function managerFileRepeatDelete(){

    var checks = $$(#romlist_repeat .check_repeat:checked);
    if(checks.length == 0){
    alert(CONF.Lang.NotSelectGames);
        return;
    }

    var arr = [];
    for(var c in checks){
        arr.push(c.value);
    }


  //确认窗口
    var result = view.msgbox {
        type:#question, 
        content:CONF.Lang.DeleteRomConfirm, 
        caption:CONF.Lang.DeleteRom,
        buttons:[
            {id:#yes,text:CONF.Lang.Delete},
            {id:#cancel,text:CONF.Lang.Cancel,role:"default-button"}
        ]
    };

    if (result != "yes"){
        return true;
    }


    for(var id in arr) {
        mainView.DeleteRom(id); //删除实体文件
        //删除页面上的dom
    }

    managerCheckRepeat();
}

//运行游戏 - 文件去重
function managerRunGame(obj){
    mainView.RunGame(obj.parent.parent.attributes["rid"],"");
}

/**
 * 无效资源清理
 **/

 //检测无效资源 - 无效资源清理
function managerCheckZombie(){

    var platformId = $(#platform_zombie).value;

    if (platformId == "0"){
        alert(CONF.Lang.SelectPlatform);
        return;
    }

    var romjson = mainView.CheckRomZombie(platformId);
    var romobj = JSON.parse(romjson);

    if(romobj.length == 0 ){
        alert(CONF.Lang.NoInvalidFilesNotFound);
        return;
    }

    if(romobj.length > 500 ){
        alert(CONF.Lang.TipNoInvalidFilesFound);
        return;
    }

    var romData = "";
    var type = "";
    var desc = "";
    for(var obj in romobj) {

        if(obj.type == 1){
            type = CONF.Lang.NoInvalidFile;
            desc = CONF.Lang.TipNoInvalidFile;
        }else if(obj.type == 2){
            type = CONF.Lang.DuplicateFiles;
            desc = CONF.Lang.TipDuplicateFiles;
        }else{
            type = CONF.Lang.SubGameFiles;
            desc = CONF.Lang.TipSubGameFiles;
        }

        romData += "<tr>";
        romData += "<td><input class='check_zombie' type='checkbox' value='"+ obj.path +"' /></td>";
        romData += "<td title='"+ desc +"'>"+ type +"</td>";
        romData += "<td>"+ obj.path +"</td>";
        romData += "</tr>"
    }
    $(#romlist_zombie tbody).html = romData;
}

//移动文件 - 无效资源清理
function managerFileZombieMoveRom(){

    var checks = $$(#romlist_zombie .check_zombie:checked);
    if(checks.length == 0){
        alert(CONF.Lang.NotSelectGames);
        return;
    }

    var paths = [];
    for(var c in checks){
        paths.push(c.value);
    }

    var url = view.selectFolder(CONF.Lang.SelectFolder);
    if(url){
        url = URL.toPath(url);
        url = url.split("\/").join(CONF.Separator.toString());
        url = url.split(CONF.RootPath.toString()).join("");

        mainView.MoveZombieByFileManager(JSON.stringify(paths),url);
        managerCheckZombie();
    }
}

//删除文件 - 无效资源清理
function managerFileZombieDelete(){

    var checks = $$(#romlist_zombie .check_zombie:checked);
    if(checks.length == 0){
    alert(CONF.Lang.NotSelectGames);
        return;
    }

    var arr = [];
    for(var c in checks){
        arr.push(c.value);
    }


    //确认窗口
    var result = view.msgbox {
        type:#question, 
        content:CONF.Lang.DeleteFile, 
        caption:CONF.Lang.DeleteFileConfirm,
        buttons:[
            {id:#yes,text:CONF.Lang.Delete},
            {id:#cancel,text:CONF.Lang.Cancel,role:"default-button"}
        ]
    };

    if (result != "yes"){
        return true;
    }

    for(var p in arr) {
        mainView.DeleteZombieByFileManager(p); //删除实体文件
        //删除页面上的dom
    }

    managerCheckZombie();
}