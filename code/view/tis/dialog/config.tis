var pfId;
view.root.on("ready", function(){

    //初始化方法
    try{
    Init();
}catch(e){
    alert(e);
}
    //快捷软件拖动排序
    DragDrop{
        what      : "#shortcut_list li",
        where     : "#shortcut_list",
        container : "#shortcut_list",        
        dropped : function(){
            var lis = $$(#shortcut_list > li);
            var id = "";
            var newObj = {};
            for(var li in lis) {
                id = li.attributes["value"];
                newObj[id] = li.index;
            }
            //更新到数据库
            mainView.UpdateShortcutSort(JSON.stringify(newObj));
        }  
    };

});

//初始化方法
function Init(){
    //渲染语言
    createLang();

    //定义标题
    view.windowCaption = CONF.Lang.Config;

    //生成语言列表
    var langdata = "";
    var config_lang = $(#config_lang);
    for(var lang in CONF.LangList) {
        config_lang.options.$append(<option value={lang}>{lang}</option>);
    }

    $(#config_lang).value = CONF.Default.Lang;
    $(#config_soft_name).value = CONF.Default.SoftName;
    $(#config_enable_upgrade).value = CONF.Default.EnableUpgrade;

    //图片搜索引擎
    $(#config_search_engines).value = CONF.Default.SearchEngines;

    var cursor_url = CONF.Default.Cursor;
    cursor_url = cursor_url.split("\/").join(CONF.Separator.toString());
    cursor_url = cursor_url.split(CONF.RootPath.toString()).join("");


    //生成界面选项
    $(#config_background).value = CONF.Default.BackgroundImage;
    $(#config_background_repeat).value = CONF.Default.BackgroundRepeat;
    $(#config_wallpaper).value = CONF.Default.WallpaperImage;
    $(#config_cursor).html = cursor_url;

    //生成快捷工具列表
    var shortcut = "";
    var shortcut_list = JSON.parse(mainView.GetShortcut());

    for(var s in shortcut_list) {
        shortcut += "<li id='shortcut_li_"+ s.Id +"' value='"+ s.Id +"'>";
        shortcut += "<input type='text' id='shortcut_name_"+ s.Id + "' value='"+ s.Name +"' title='"+CONF.Lang.ShortcutNameDesc+"' />";
        shortcut += "<input type='text' id='shortcut_path_"+ s.Id + "' value='"+ s.Path +"' title='"+CONF.Lang.ShortcutPathDesc+"' />";
        shortcut += "<button class='openfile' for='shortcut_path_" + s.Id + "' caption='' filter='All Files (*.*)|*.*'>...</button>";
        shortcut += "<button class='shortcut_update' value='"+ s.Id +"'>"+CONF.Lang.Update+"</button>";
        shortcut += "<button class='shortcut_delete' value='"+ s.Id +"'>"+CONF.Lang.Delete+"</button>";
        shortcut += "<label title='"+CONF.Lang.ShortcutSortDesc+"'><i.sort></i></label>";
        shortcut += "</li>";
    }
    $(#shortcut_list).html = shortcut;

    //游戏资料枚举
    $(#rombase_type).value = mainView.GetRombaseEnumByType("type");
    $(#rombase_publisher).value = mainView.GetRombaseEnumByType("publisher");
    $(#rombase_country).value = mainView.GetRombaseEnumByType("country");
    $(#rombase_version).value = mainView.GetRombaseEnumByType("version");
}


//更新通用配置信息
function configSubmit(evt){

    var data = {
        lang : $(#config_lang).value.toString(),
        soft_name : $(#config_soft_name).value.toString(),
        search_engines : $(#config_search_engines).value.toString(),
        enable_upgrade :$(#config_enable_upgrade).value,
    };

    //更新平台信息
    for(var k in data) {
        var result = mainView.UpdateConfig(k,data[k]);
    }

    view.msgbox(#alert,CONF.Lang.UpdateSuccess);
}

//选择文件夹
function openFolder(evt) {
    var url = view.selectFolder(evt.attributes["caption"]);
    var out = self.select("#"+evt.attributes["for"]);
    if(url){
        url = URL.toPath(url);
        url = url.split("\/").join(CONF.Separator.toString());
        url = url.split(CONF.RootPath.toString()).join("");
        out.value = url;
    }
}

//选择文件
function openFile(evt) {
    const defaultExt = "";
    const initialPath = "";
    const filter = evt.attributes["filter"];
    const caption = evt.attributes["caption"];
    var url = view.selectFile("#"+evt.attributes["for"], filter, defaultExt, initialPath, caption );
    var out = self.select("#"+evt.attributes["for"]);  
    if(url){
        url = URL.toPath(url);
        url = url.split("\/").join(CONF.Separator.toString());
        url = url.split(CONF.RootPath.toString()).join("");
        out.value = url;
        out.focus = true;
        out.focus = false;
    }
}


//添加快捷工具
function shortcutAdd(evt) {
    var insertId = mainView.AddShortcut();
    if(insertId != "0"){
        var shortcut = "";
        shortcut += "<li id='shortcut_li_"+ insertId +"' value='"+ insertId +"'>";
        shortcut += "<input type='text' novalue='"+ CONF.Lang.FileName +"' id='shortcut_name_"+ insertId + "' value='' title='"+CONF.Lang.ShortcutNameDesc+"' />";
        shortcut += "<input type='text' novalue='"+ CONF.Lang.FilePath +"'  id='shortcut_path_"+ insertId + "' value='' title='"+CONF.Lang.ShortcutPathDesc+"' />";
        shortcut += "<button class='openfile' for='shortcut_path_" + insertId + "' caption='' filter='All Files (*.*)|*.*'>...</button>";
        shortcut += "<button class='shortcut_update' value='"+ insertId +"'>"+CONF.Lang.Update+"</button>";
        shortcut += "<button class='shortcut_delete' value='"+ insertId +"'>"+CONF.Lang.Delete+"</button>";
        shortcut += "<label title='"+CONF.Lang.ShortcutSortDesc+"'><i.sort></i></label>";
        shortcut += "</li>";
        $(#shortcut_list).append(shortcut);
    }
}

//更新快捷工具
function shortcutUpdate(evt) {
    var id = evt.attributes["value"];
    var parentDom = $(#shortcut_list);
    var name = parentDom.select("#shortcut_name_" + id).value;
    var path = parentDom.select("#shortcut_path_" + id).value;
    if(name == "" || name == undefined ){
        view.msgbox(#alert,CONF.Lang.ShortcutNameNotFound);
        return;
    }

    if(path == "" || path == undefined){
        view.msgbox(#alert,CONF.Lang.ShortcutPathNotFound);
        return;
    }

    var obj = {
        id:id,
        name:name,
        path:path,
    };
    var datastr = JSON.stringify(obj);
    var result = mainView.UpdateShortcut(datastr);
    view.msgbox(#alert,CONF.Lang.UpdateSuccess);
}

//删除快捷工具
function shortcutDelete(evt) {
    //确认窗口
    var result = view.msgbox {
        type:#question, 
        content:CONF.Lang.DeleteConfirm, 
        caption:CONF.Lang.DeletePlatform,
        buttons:[
            {id:#yes,text:CONF.Lang.Delete},
            {id:#cancel,text:CONF.Lang.Cancel,role:"default-button"}
        ]
    };

    if (result != "yes"){
        return true;
    }

    var id = evt.attributes["value"];
    //开始执行删除操作
    result = mainView.DelShortcut(id);
    if(result == "1"){
        self.select("#shortcut_li_" + id).remove();
    }
}

//更新鼠标指针
function setCursor(obj){
    var saveVal = URL.toPath(obj.value);
    saveVal = saveVal.split("\/").join(CONF.Separator.toString());
    saveVal = saveVal.split(CONF.RootPath.toString()).join("");
    $(body).style["cursor"] = [url:URL.fromPath(obj.value)];
}

//更新背景图片
function setBackgroundImage(obj){
    mainView.root.$(body).style["background-image"] = [url:URL.fromPath(obj.value)];
    var saveVal = URL.toPath(obj.value);
    saveVal = saveVal.split("\/").join(CONF.Separator.toString());
    saveVal = saveVal.split(CONF.RootPath.toString()).join("");
}

//更新背景循环方式
function setBackgroundRepeat(obj){
    if(obj.value == "cover"){
        mainView.root.$(body).style["background-size"] = obj.value;
        mainView.root.$(body).style["background-repeat"] = "no-repeat";
    }else{
        mainView.root.$(body).style["background-repeat"] = obj.value;
        mainView.root.$(body).style["background-size"] = "contain";
    }
}

//提交界面样式
function interfaceSubmit(obj){
    var cursor = $(#config_cursor).value;
    var background_image = $(#config_background).value;
    var background_repeat = $(#config_background_repeat).value;
    var wallpaper_image = $(#config_wallpaper).value;

    mainView.UpdateConfig("cursor",cursor);
    mainView.UpdateConfig("background_image",background_image);
    mainView.UpdateConfig("background_repeat",background_repeat);
    mainView.UpdateConfig("wallpaper_image",wallpaper_image);

    view.msgbox(#alert,CONF.Lang.UpdateSuccess);
}

//游戏资料枚举设置
function rombaseSubmit(){
    mainView.UpdateRomBaseEnumByType("type",$(#rombase_type).value);
    mainView.UpdateRomBaseEnumByType("publisher",$(#rombase_publisher).value);
    mainView.UpdateRomBaseEnumByType("country",$(#rombase_country).value);
    mainView.UpdateRomBaseEnumByType("version",$(#rombase_version).value);
    view.msgbox(#alert,CONF.Lang.UpdateSuccess);
}