var pfId;
view.root.on("ready", function(){
 
    //渲染语言
    createLang();

    //定义标题
    view.windowCaption = CONF.Lang.Config;

    //生成语言列表
    var langdata = "";
    var config_lang = $(#config_lang);
    for(var lang in CONF.LangList) {
        config_lang.options.$append(<option value={lang}>{lang}</option>);
    }

    $(#config_lang).value = CONF.Default.Lang;
    $(#config_thumb).value = CONF.Default.Thumb;

    //图片搜索引擎
    $(#config_search_engines).value = CONF.Default.SearchEngines;

    //生成平台列表
    var pfdata = "";
    var lists = view.parameters.getPlatform();
    var platform_list = $(#platform_list);
    for(var pf in lists) {
        pfdata += '<li value="'+ pf.Id +'">'+ pf.Name +'</li>';
    }
    platform_list.html = pfdata;

    //生成快捷工具列表
    
    var shortcut = "";
    var shortcut_list = view.parameters.getShortcut();
    for(var s in shortcut_list) {
        shortcut += "<li id='shortcut_li_"+ s.Id +"' value='"+ s.Id +"'>";
        shortcut += "<input type='text' id='shortcut_name_"+ s.Id + "' value='"+ s.Name +"' title='"+CONF.Lang.ShortcutNameDesc+"' />";
        shortcut += "<input type='text' id='shortcut_path_"+ s.Id + "' value='"+ s.Path +"' title='"+CONF.Lang.ShortcutPathDesc+"' />";
        shortcut += "<button class='openfile' for='shortcut_path_" + s.Id + "' caption='' filter='All Files (*.*)|*.*'>&#x2026;</button>";
        shortcut += "<button class='shortcut_update' value='"+ s.Id +"'>"+CONF.Lang.Update+"</button>";
        shortcut += "<button class='shortcut_delete' value='"+ s.Id +"'>"+CONF.Lang.Delete+"</button>";
        shortcut += "<label title='"+CONF.Lang.ShortcutSortDesc+"'><i>&#xe839;</i></label>";
        shortcut += "</li>";
    }
    $(#shortcut_list).html = shortcut;

    //快捷软件拖动排序
    DragDrop{
        what      : "#shortcut_list li",
        where     : "#shortcut_list",
        container : "#shortcut_list",        
        dropped : function(){
            var lis = $$(#shortcut_list > li);
            var id = "";
            var newObj = {};
            for(var li in lis) {
                id = li.attributes["value"];
                newObj[id] = li.index;
            }
            //更新到数据库
            view.parameters.updateShortcutSort(newObj);
        }  
    };


});

//平台列表点击
event click $(#platform_list li) {

    pfId = this.attributes["value"].toString();

    //激活按钮改变样式
    this.state.current = true;

    //读取平台信息
    var info = view.parameters.getPlatformById(pfId);
    $(#platform_name).value = info.Name;
    $(#platform_icon).value = info.Icon;
    $(#platform_exts).value = info.RomExts;
    $(#platform_doc).value = info.DocPath;
    $(#platform_strategy).value = info.StrategyPath;
    $(#platform_rom).value = info.RomPath;
    $(#platform_thumb).value = info.ThumbPath;
    $(#platform_snap).value = info.SnapPath;
    $(#platform_poster).value = info.PosterPath;
    $(#platform_packing).value = info.PackingPath;
    $(#platform_romlist).value = info.Romlist;
    //模拟器数据
    var platform_sim = $(#platform_sim);
    platform_sim.options.clear();
   
    //读取模拟器列表
    var sims = view.parameters.getSimulatorByPlatform(pfId);
    platform_sim.options.$append(<option value=0>{CONF.Lang.EditSimulator}</option>);
    for(var simId in sims) {
        platform_sim.options.$append(<option value={sims[simId].Id}>{sims[simId].Name}</option>);
    }
    platform_sim.value = 0;
 
    //激活提交按钮
    $(#platform_submit).state.disabled = false;
    $(#add_sim).state.disabled = false;
    $(#platform_sim).state.disabled = false;
    $(#platform_name).state.disabled = false;
    $(#platform_icon).state.disabled = false;
    $(#platform_exts).state.disabled = false;
    $(#platform_doc).state.disabled = false;
    $(#platform_strategy).state.disabled = false;
    $(#platform_rom).state.disabled = false;
    $(#platform_thumb).state.disabled = false;
    $(#platform_snap).state.disabled = false;
    $(#platform_poster).state.disabled = false;
    $(#platform_packing).state.disabled = false;
    $(#platform_romlist).state.disabled = false;

    var openfile = $$(.openfile);
    for(var of in openfile) {
        of.state.disabled = false;
    }

    var openfolders = $$(.openfolder);
    for(var of in openfolders) {
        of.state.disabled = false;
    }

}

//更新通用配置信息
event click $(#config_submit) {
    var data = {
        lang : $(#config_lang).value.toString();
        search_engines : $(#config_search_engines).value.toString();
        thumb : $(#config_thumb).value.toString();
    };
    //更新平台信息
    view.parameters.updateConfig(data);
}

//更新平台信息
event click $(#platform_submit) {
    var data = {
        id       : $(#platform_list).select("li:current").attributes["value"].toString();
        name     : $(#platform_name).value,
        icon     : $(#platform_icon).value,
        exts     : $(#platform_exts).value,
        rom      : $(#platform_rom).value,
        thumb    : $(#platform_thumb).value,
        snap     : $(#platform_snap).value,
        poster   : $(#platform_poster).value,
        packing  : $(#platform_packing).value,
        strategy : $(#platform_strategy).value,
        doc      : $(#platform_doc).value,
        romlist  : $(#platform_romlist).value,
    };
    if(data.id == ""){view.msgbox(#alert,CONF.Lang.SelectPlatform);return true;}
    if(data.name == ""){view.msgbox(#alert,CONF.Lang.PlatformNameCanNotBeEmpty);return true;}
    if(data.exts == ""){view.msgbox(#alert,CONF.Lang.RomTypeCanNotBeEmpty);return true;}
    if(data.rom == ""){view.msgbox(#alert,CONF.Lang.RomMenuCanNotBeEmpty);return true;}

    //检查并补全扩展名
    data.exts = completeExt(data.exts);
    //更新补全的扩展名到文本框中
    $(#platform_exts).value = data.exts;
    //更新名称到列表中
    $(#platform_list).select("li:current").html = data.name;

    //更新平台信息
    view.parameters.updatePlatform(data);
}


//添加模拟器
event click $(#add_sim) {
    var res = view.dialog({
        url:self.url(ROOTPATH + "dialog/edit_sim.html"),
        width:490,
        height:300,
        parameters: {
            id:0,
            platform:pfId,
            addSimulator:addSimulator,
        }
    })

    //更新option选项
    if(res != ""){
        var sim = JSON.parse(res);
        $(#platform_sim).options.$append(<option value={sim.Id}>{sim.Name}</option>);
    }

};

//修改模拟器模拟器
event change $(#platform_sim) {
   if(this.value == 0){return true;}
   var res = view.dialog({
        url:self.url(ROOTPATH + "dialog/edit_sim.html"),
        width:490,
        height:300,
        parameters: {
            id:this.value,
            platform:pfId,
            updateSimulator:updateSimulator,
            delSimulator:delSimulator,
            getSimulatorById:getSimulatorById,
        };
    });

    //将选择还原回【选择模拟器】项目，防止项目被选定
    this.value = 0;

    //更新option选项
    if(res != ""){
        var sim = JSON.parse(res);
        if(sim.Opt == undefined){
            //修改
            $(#platform_sim).select("option[value="+sim.Id+"]").html = sim.Name;
        }else{
            //删除
            $(#platform_sim).select("option[value="+sim.Id+"]").remove();
        }
    }
}

//选择文件夹
event click $(.openfolder){
    var url = view.selectFolder(this.attributes["caption"]);
    var out = self.select("#"+this.attributes["for"]);
    if(url){
        url = URL.toPath(url);
        url = url.split("\/").join(CONF.Separator.toString());
        url = url.split(CONF.RootPath.toString()).join("");
        out.value = url;
    }
}

//选择文件
event click $(.openfile){
    const defaultExt = "";
    const initialPath = "";
    const filter = this.attributes["filter"];
    const caption = this.attributes["caption"];
    var url = view.selectFile("#"+this.attributes["for"], filter, defaultExt, initialPath, caption );
    var out = self.select("#"+this.attributes["for"]);  
    if(url){
        url = URL.toPath(url);
        url = url.split("\/").join(CONF.Separator.toString());
        url = url.split(CONF.RootPath.toString()).join("");
        out.value = url;
    }
}

//添加平台
event click $(#platform_add){
    var name =  view.dialog({
        url:self.url(ROOTPATH + "dialog/add_platform.html"),
        width:310,
        height:170,
        parameters: {};
    });

    if(name == "" || name == undefined){
        return;
    }

    //开始添加平台
    var insertId = view.parameters.addPlatform(name);
    if(insertId != "0"){
        var newopt = "<li value='"+ insertId +"'>"+ name +"</li>";
        $(#platform_list).append(newopt);
        view.msgbox(#alert,CONF.Lang.AddSuccess);
    }
}

//删除平台
event click $(#platform_del){
    var pfId = $(#platform_list li:current).attributes["value"];
    if (pfId == undefined){
        view.msgbox(#alert,CONF.Lang.NotSelectPlatform);
        return true;
    }

    //确认窗口
    var result = view.msgbox {
        type:#question, 
        content:CONF.Lang.DeletePlatformConfirm, 
        caption:CONF.Lang.DeletePlatform,
        buttons:[
            {id:#yes,text:CONF.Lang.Delete},
            {id:#cancel,text:CONF.Lang.Cancel,role:"default-button"}
        ]
    };

    if (result != "yes"){
        return true;
    }

    //开始执行删除操作
    result = view.parameters.delPlatform(pfId);
    if(result == "1"){
        $(#platform_list li:current).remove();
        view.msgbox(#alert,CONF.Lang.DeleteSuccess);
    }
}

//添加快捷工具
event click $(#shortcut_add){
    var insertId = view.parameters.addShortcut();
    if(insertId != "0"){
        var shortcut = "";
        shortcut += "<li id='shortcut_li_"+ insertId +"' value='"+ insertId +"'>";
        shortcut += "<input type='text' id='shortcut_name_"+ insertId + "' value='' title='"+CONF.Lang.ShortcutNameDesc+"' />";
        shortcut += "<input type='text' id='shortcut_path_"+ insertId + "' value='' title='"+CONF.Lang.ShortcutPathDesc+"' />";
        shortcut += "<button class='openfile' for='shortcut_path_" + insertId + "' caption='' filter='All Files (*.*)|*.*'>&#x2026;</button>";
        shortcut += "<button class='shortcut_update' value='"+ insertId +"'>"+CONF.Lang.Update+"</button>";
        shortcut += "<button class='shortcut_delete' value='"+ insertId +"'>"+CONF.Lang.Delete+"</button>";
        shortcut += "<label title='"+CONF.Lang.ShortcutSortDesc+"'><i>&#xe839;</i></label>";
        shortcut += "</li>";
        $(#shortcut_list).append(shortcut);
    }
}

//更新快捷工具
event click $(.shortcut_update){
    var id = this.attributes["value"];
    var parentDom = $(#shortcut_list);
    var name = parentDom.select("#shortcut_name_" + id).value;
    var path = parentDom.select("#shortcut_path_" + id).value;
    if(name == "" || name == undefined ){
        view.msgbox(#alert,CONF.Lang.ShortcutNameNotFound);
        return;
    }

    if(path == "" || path == undefined){
        view.msgbox(#alert,CONF.Lang.ShortcutPathNotFound);
        return;
    }

    var obj = {
        id:id,
        name:name,
        path:path,
    };
    view.parameters.updateShortcut(obj);
    view.msgbox(#alert,CONF.Lang.UpdateSuccess);
    
}

//删除快捷工具
event click $(.shortcut_delete){
    
    //确认窗口
    var result = view.msgbox {
        type:#question, 
        content:CONF.Lang.DeleteConfirm, 
        caption:CONF.Lang.DeletePlatform,
        buttons:[
            {id:#yes,text:CONF.Lang.Delete},
            {id:#cancel,text:CONF.Lang.Cancel,role:"default-button"}
        ]
    };

    if (result != "yes"){
        return true;
    }

    var id = this.attributes["value"];
    //开始执行删除操作
    result = view.parameters.delShortcut(id);
    if(result == "1"){
        self.select("#shortcut_li_" + id).remove();
    }
}


//备份文件
event click $(#backupConfig){
    const defaultExt = "";
    const initialPath = "";
    const filter = this.attributes["filter"];
    const caption = this.attributes["caption"];
    var url = view.selectFile("#"+this.attributes["for"], filter, defaultExt, initialPath, caption );
    if(url){
        url = URL.toPath(url);
        backupConfig(url);
    }
}

//读取配置信息
event click $(#getRestoreConfig){
    const defaultExt = "";
    const initialPath = "";
    const filter = this.attributes["filter"];
    const caption = this.attributes["caption"];
    var url = view.selectFile("#"+this.attributes["for"], filter, defaultExt, initialPath, caption );
    if(url){
        url = URL.toPath(url);
        var obj = getRestoreInfo(url);
        alert(obj.date);
    }
}

//还原配置
event click $(#restoreConfig){
    var url = $(#getRestoreConfig).value;
    restoreConfig(url);
}
