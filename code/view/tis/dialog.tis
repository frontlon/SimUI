//更新配置信息
function updateConfig(data){
    for(var k in data) {
        var result = view.UpdateConfig(k,data[k]);
    }
    view.msgbox(#alert,"更新成功");
}

//添加一个新平台
function addPlatform(name){
    var result = view.AddPlatform(name);
    return result;
}

//删除一个平台
function delPlatform(id){
    //删除平台
    var result = view.DelPlatform(id);
    //生成缓存
    createAllCache("0");
    return result;
}

//更新平台配置
function updatePlatform(data){
    var datastr = JSON.stringify(data);
    var result = view.UpdatePlatform(datastr);
    if( result.toString() == "1"){
        view.msgbox(#alert,"更新成功");
    }
}

//读取一个平台的信息
function getPlatformById(id){
    var result = view.GetPlatformById(id);
    var resultObj = JSON.parse(result);
    return resultObj;
}

//读取平台列表
function getPlatform(){
    var result = view.GetPlatform();
    var resultObj = JSON.parse(result);
    return resultObj;
}

//读取一个模拟器信息
function getSimulatorById(id){
    var result = view.GetSimulatorById(id);
    var resultObj = JSON.parse(result);
    return resultObj;
}

//读取模拟器列表
function getSimulatorByPlatform(platform){
    var result = view.GetSimulatorByPlatform(platform);
    var resultObj = JSON.parse(result);
    return resultObj;
}

//添加模拟器
function addSimulator(data){
    var datastr = JSON.stringify(data);
    var result = view.AddSimulator(datastr);
    return result;
}

//编辑模拟器
function updateSimulator(data){
    var datastr = JSON.stringify(data);
    var result = view.UpdateSimulator(datastr);
    return result;
}

//更新rom的展示图片
function updateRomThumbs(type,id,newpath){
    var result = view.UpdateRomThumbs(type,id,newpath);
    //刷新rom列表图片
    if(result != ""){
        $(#romlist).select("li[rid="+id+"] img").attributes['src'] = newpath;
    }
    return result;
}


