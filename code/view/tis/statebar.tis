var MAXZOOM = 6; //最大缩放等级


//初始化游戏列表样式
function initRomListStyle(){

    var romlist = $(#romlist);

    //初始化游戏列表样式
    if(CONF.Default.RomlistStyle == "1"){
        $(#switch_romlist).html = "<i.block.minsize></i>";
        romlist.attributes.addClass("romblock");
        if($(.romth) != undefined){
            $(.romth).style["display"]="none";
        }
        
    }else{
        $(#switch_romlist).html = "<i.list.minsize></i>";
        romlist.attributes.addClass("romlist");
        if($(.romth) != undefined){
            $(.romth).style["display"]="block";
        }
    }

    //初始化rom列表模块大小
    romlist.attributes.addClass("zoom"+CONF.Default.RomlistSize);
    $(#switch_romlist).attributes["value"] = CONF.Default.RomlistStyle;

     //初始化rom列表字体大小
    romlist.attributes.addClass('fontsize'+CONF.Default.RomlistFontSize);

    //初始化列表模块间距
    romlist.attributes.addClass("margin" + CONF.Default.RomlistMargin);

    //是否显示rom列表的标题背景颜色
    romlist.attributes.addClass("bg" + CONF.Default.RomlistFontBackground);

    //初始化rom列表图片显示方向
    if(romlist.attributes.hasClass("horizontal")){romlist.attributes.removeClass("horizontal");}
    if(romlist.attributes.hasClass("vertical")){romlist.attributes.removeClass("vertical");}
    if(CONF.Default.RomlistDirection == 1){romlist.attributes.addClass("horizontal");}
    else if(CONF.Default.RomlistDirection == 2){romlist.attributes.addClass("vertical");}

    //初始化列表列显示项
    var column = CONF.Default.RomlistColumn.split(",");
    var dom = $$(.romlist_column);
    var i = 0;
      for(var obj in dom){
          obj.checked = column[i] == 1 ? true : false;
          i++;
      }
   
}

//生成快捷工具列表
function initShortcutList(){
    var li = ""; 
    for(var obj in CONF.Shortcut) {
        li += "<li path='"+ obj.Path +"'>"+ obj.Name + "</li>";
    }
    $(#shortcut menu).html = li; //生成dom
}

//创建主题
function initTheme(){

    //默认主题
    self.attributes["theme"] = CONF.Default.Theme;


    //渲染页面主题
    initUiTheme();

    //生成主题列表
    var menu = "";
    for(var themeId in CONF.Theme) {
        menu += "<li id="+ themeId +">"+  CONF.Theme[themeId].Name +"</li>"; //填充菜单
    }
    $(#theme menu).html = menu;

    //设置首页主题样式
    setTheme(CONF.Default.Theme);
}

function initBaseFilter(platform){

    $(#search_input).value = "";

    $(#filter_type).value = "";
    $(#filter_type).options.clear();
    $(#filter_type).options.$append(<option value=''>{CONF.Lang.BaseType}</option>);

    var getjson = view.GetFilter(platform,"base_type");
    var jsonObj = JSON.parse(getjson);
    if (jsonObj.length > 0){
        for(var obj in jsonObj) {
            $(#filter_type).options.$append(<option value={obj.Name}>{obj.Name}</option>);
        }
    }
    $(#filter_type).value = "";
    
    //年份
    $(#filter_year).value = "";
    $(#filter_year).options.clear();
    $(#filter_year).options.$append(<option value=''>{CONF.Lang.BaseYear}</option>);
    getjson = view.GetFilter(platform,"base_year");
    jsonObj = JSON.parse(getjson);
    if (jsonObj.length > 0){
        for(var obj in jsonObj) {
            $(#filter_year).options.$append(<option value={obj.Name}>{obj.Name}</option>);
        }
    }
    $(#filter_year).value = "";

    //发行商
    $(#filter_publisher).value = "";
    $(#filter_publisher).options.clear();
    $(#filter_publisher).options.$append(<option value=''>{CONF.Lang.BasePublisher}</option>);

    getjson = view.GetFilter(platform,"base_publisher");
    jsonObj = JSON.parse(getjson);
    if (jsonObj.length > 0){
        for(var obj in jsonObj) {
            $(#filter_publisher).options.$append(<option value={obj.Name}>{obj.Name}</option>);
        }
    }
    $(#filter_publisher).value = "";
    
    //地区
    $(#filter_country).value = "";
    $(#filter_country).options.clear();
    $(#filter_country).options.$append(<option value=''>{CONF.Lang.BaseCountry}</option>);
    getjson = view.GetFilter(platform,"base_country");
    jsonObj = JSON.parse(getjson);
    if (jsonObj.length > 0){
        for(var obj in jsonObj) {
            $(#filter_country).options.$append(<option value={obj.Name}>{obj.Name}</option>);
        }
    }
    $(#filter_country).value = "";

    //汉化组
    $(#filter_translate).value = "";
    $(#filter_translate).options.clear();
    $(#filter_translate).options.$append(<option value=''>{CONF.Lang.BaseTranslate}</option>);
    getjson = view.GetFilter(platform,"base_translate");
    jsonObj = JSON.parse(getjson);
    if (jsonObj.length > 0){
        for(var obj in jsonObj) {
            $(#filter_translate).options.$append(<option value={obj.Name}>{obj.Name}</option>);
        }
    }
    $(#filter_translate).value = "";

    //是否显示和隐藏
    var column = CONF.Default.RomlistColumn.split(",");
    $(#filter_type).style["display"] = column[1] == 1 ? "inline-block" : "none";
    $(#filter_year).style["display"] = column[2] == 1 ? "inline-block" : "none";
    $(#filter_publisher).style["display"] = column[3] == 1 ? "inline-block" : "none";
    $(#filter_country).style["display"] = column[4] == 1 ? "inline-block" : "none";
    $(#filter_translate).style["display"] = column[5] == 1 ? "inline-block" : "none";

}

//开启关闭平台栏
function togglePlatform(){
    var dom = $(#left_platform);
    var val = 0;
    if (dom.style["display"] == "block"){
        dom.style["display"] = "none";
        val = 0;
    }else{
        dom.style["display"] = "block";
        val = 1;
    }

    //更新数据库配置
    view.UpdateConfig("panel_platform",val);
}
//开启关闭菜单栏
function toggleMenu(){
    var dom = $(#left_menu);
    var val = 0;
    if (dom.style["display"] == "block"){
        dom.style["display"] = "none";
        val = 0;
    }else{
        dom.style["display"] = "block";
        val = 1;
    }

    //更新数据库配置
    view.UpdateConfig("panel_menu",val);
}
//开启关闭侧边栏
function toggleSidebar(){
    var dom = $(#right);
    var val = 0;
    if (dom.style["display"] == "block"){
        dom.style["display"] = "none";
        val = 0;
    }else{
        dom.style["display"] = "block";
        val = 1;
    }
    //更新数据库配置
    view.UpdateConfig("panel_sidebar",val);
}

 //切换rom列表样式
function switchRomListStyle(obj){
    if(obj.attributes["value"] == "1"){
        obj.attributes["value"] = "2";
        obj.html = "<i.list.minsize></i>";
        self.$(#romlist).attributes.removeClass("romblock");
        self.$(#romlist).attributes.addClass("romlist");
        self.$(.romth).style["display"]="block";
    }else{
        obj.attributes["value"] = "1";
        obj.html = "<i.block.minsize></i>";
        self.$(#romlist).attributes.removeClass("romlist");
        self.$(#romlist).attributes.addClass("romblock");
        self.$(.romth).style["display"]="none";
    }
    //更新配置文件
    view.UpdateConfig("romlist_style",obj.attributes["value"]);
}

//运行快捷工具
function runShortcut(obj){
    var path = obj.attributes["path"];
    view.RunShortcut(path);
}

//切换主题
function changeTheme(obj){
    var id = obj.attributes["id"]; //主题列表
    self.attributes["theme"] = id;
    
    //更新主题样式
    setTheme(id);
    
    //更新配置文件
    view.UpdateConfig("theme",id)
}

//设置主题样式
function setTheme(themeId){

    if(CONF.Theme[themeId].Params["body-opacity"] != undefined){
        $(#titlebar).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        $(#left_platform).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        $(#left_menu).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        //$(#left_splitter).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        $(#center).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        $(#right).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        $(#right_splitter).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
    }

    var themePath = CONF.RootPath + "theme/";

    if(CONF.Theme[themeId].Params["window-opacity"] != undefined){
        $(body).style["opacity"] = CONF.Theme[themeId].Params["window-opacity"];
    }

    if(CONF.Theme[themeId].Params["window-background-image"] != undefined){
        $(body).style["background-image"] = [url:URL.fromPath(themePath + CONF.Theme[themeId].Params["window-background-image"])];
    }

    if(CONF.Theme[themeId].Params["sidebar-image"] != undefined){
        $(#mask).style["background-image"] = [url:URL.fromPath(themePath + CONF.Theme[themeId].Params["sidebar-image"])];
    }    
}

//生成缓存
function createCache(evt){
    $(body).state.disabled = true;
    $(#create).attributes.addClass("disabled");
    startLoading();
    var opt = evt.attributes["opt"];
    var platform = 0;

    if (opt == "platform"){
        platform = ACTIVE_PLATFORM;
    }
    view.CreateRomCache(platform);
}

//检查更新
function checkUpgrade(evt){
    var data = view.CheckUpgrade();
    if(data != ""){
        upgrade(data)
    }else{
        view.msgbox(#info,CONF.Lang.Latestversion);
    }
}

//弹出关于窗口
function openAbout(){
    view.dialog({
        url:self.url(ROOTPATH + "about.html"),
        width:480,
        height:self.toPixels(360dip),
    })
}
//弹出设置窗口
function openConfig(evt){
    view.dialog({
        url:self.url(ROOTPATH + "config.html"),
        width:655,
        height:600
    });
    startLoading();
    initConfig("1");
    endLoading();
}

//启动帮助
function runHelp(){
    Sciter.launch("http://www.simui.net/");
}

//发现更新
function upgrade(data){
    if (data == ""){
        return;
    }else if (data == "error"){
        view.msgbox(#warning,CONF.Lang.NetworkRequestFailed);
        return;
    }
 
    var dataObj = JSON.parse(data);

    //选择窗口
    var result = view.msgbox {
        type:#information, 
        caption:CONF.Lang.CheckUpgrade,
        content:CONF.Lang.FoundNewversion + ": " + dataObj.version, 
        buttons:[
            {id:#download,text:CONF.Lang.DownloadNewVersion},
            {id:#never,text:CONF.Lang.NotTip},
            {id:#cancel,text:CONF.Lang.Cancel,role:"default-button"}
        ]
    };

    switch(result){
        case "download":
            Sciter.launch("http://www.simui.net/");
            break;
        case "never":
            //更新平台信息
            view.UpdateConfig("upgrade_id",dataObj.id.toString());
            break;
    }
}


//更新缓存回调
function CB_createCache(){

    $(body).state.disabled = false;

    //更新配置
    initConfig("1");

    //重置滚动翻页数据
    resetScroll();

    //初始化rom
    
    ROMJSON = view.GetGameList(ACTIVE_PLATFORM,ACTIVE_MENU,"","",0,"","","","","")
    $(#filter_type).value = "";
    $(#filter_publisher).value = "";
    $(#filter_year).value = "";
    $(#filter_country).value = "";
    $(#filter_translate).value = "";

    createRomList(1); //生成rom列表

    //生成rom数量
    var romCount = view.GetGameCount(ACTIVE_PLATFORM,"","","","","","","");
    $(#rom_count_num).html = romCount; //初始化在线人数
    endLoading(); //关闭loading框

    $(#create).attributes.removeClass("disabled");
}

//清理掉资料过滤条件
function filterClear(){
    $(#filter_type).value = "";
    $(#filter_publisher).value = "";
    $(#filter_year).value = "";
    $(#filter_country).value = "";
    $(#filter_translate).value = "";
    $(#search_input).value = "";
    search();
}
