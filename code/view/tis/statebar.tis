//初始化字体大小
function initFontSize(){
    $(#font_size).attributes["value"] = CONF.Default.FontSize; //按钮值
    $(#romlist).attributes.addClass('fontsize'+CONF.Default.FontSize);
}

//初始化游戏列表样式
function initRomListStyle(){
    //初始化游戏列表样式
    if(CONF.Default.RomlistStyle == "1"){
        $(#switch_romlist).html = "<i>&#xe659;</i>";
        $(#zoom).style["display"]="inline-block";
        $(#romlist).attributes.addClass("romblock");
    }else{
        $(#switch_romlist).html = "<i>&#xe690;</i>";
        $(#romlist).attributes.addClass("romlist");
        $(#zoom).style["display"]="none";
    }

    var zoom = $(#zoom);
    zoom.attributes["value"] = CONF.Default.RomlistZoom;

    if(CONF.Default.RomlistZoom.toInteger() >= MAXZOOM){
        zoom.html = "<i>&#xe615;</i>";
    }else{
        zoom.html = "<i>&#xe60f;</i>";
    }

    $(#romlist).attributes.addClass("zoom"+CONF.Default.RomlistZoom); //更新列表大小
    $(#switch_romlist).attributes["value"] = CONF.Default.RomlistStyle;
}

//生成快捷工具列表
function initShortcutList(){
    var li = ""; 
    for(var obj in CONF.Shortcut) {
        li += "<li path='"+ obj.Path +"'>"+ obj.Name + "</li>";
    }
    $(#shortcut menu).html = li; //生成dom
}

//创建主题
function initTheme(){

    //默认主题
    self.attributes["theme"] = CONF.Default.Theme;

    //生成主题列表
    var cssfile = "";
    var menu = "";

    for(var themeId in CONF.Theme) {
        cssfile += "<style src='"+  CONF.Theme[themeId].Path +"' />"; //引入文件
        menu += "<li id="+ themeId +">"+  CONF.Theme[themeId].Name +"</li>"; //填充菜单
    }
    $(#theme menu).html = menu;
    $(#themefile).html = cssfile;

    //设置主题样式
    setTheme(CONF.Default.Theme);
}


//开启关闭平台栏
function togglePlatform(){
    var dom = $(#left_platform);
    var val = 0;
    if (dom.style["display"] == "block"){
        dom.style["display"] = "none";
        val = 0;
    }else{
        dom.style["display"] = "block";
        val = 1;
    }

    //更新数据库配置
    view.UpdateConfig("panel_platform",val);
}
//开启关闭菜单栏
function toggleMenu(){
    var dom = $(#left_menu);
    var val = 0;
    if (dom.style["display"] == "block"){
        dom.style["display"] = "none";
        val = 0;
    }else{
        dom.style["display"] = "block";
        val = 1;
    }

    //更新数据库配置
    view.UpdateConfig("panel_menu",val);
}
//开启关闭侧边栏
function toggleSidebar(){
    var dom = $(#right);
    var val = 0;
    if (dom.style["display"] == "block"){
        dom.style["display"] = "none";
        val = 0;
    }else{
        dom.style["display"] = "block";
        val = 1;
    }
    //更新数据库配置
    view.UpdateConfig("panel_sidebar",val);
}

 //切换rom列表样式
function switchRomListStyle(obj){
    if(obj.attributes["value"] == "1"){
        obj.attributes["value"] = "2";
        obj.html = "<i>&#xe690;</i>";
        self.$(#romlist).attributes.removeClass("romblock");
        self.$(#romlist).attributes.addClass("romlist");
        self.$(#zoom).style["display"]="none";
    }else{
        obj.attributes["value"] = "1";
        obj.html = "<i>&#xe659;</i>";
        self.$(#romlist).attributes.removeClass("romlist");
        self.$(#romlist).attributes.addClass("romblock");
        self.$(#zoom).style["display"]="inline-block";
    }
    //更新配置文件
    view.UpdateConfig("romlist_style",obj.attributes["value"])
}


//列表图标缩放
function romBlockZoom(obj){

    var romlist = self.$(#romlist);

    //先清除所有缩放样式
    for(var i=1;i<=MAXZOOM;i++){
        romlist.attributes.removeClass("zoom"+i);
    }

    var zoom = $(#zoom);
    var current = zoom.attributes["value"].toInteger();
    var next = 0;
    if(current >= MAXZOOM){
        next = 1;
    }else{
        next = current+1;
    }

    //更改按钮图标
    if(current == MAXZOOM-1){
        zoom.html = "<i>&#xe615;</i>";
    }else{
        zoom.html = "<i>&#xe60f;</i>";
    }

    //更新缩放值
    zoom.attributes["value"] = next;

    //更新列表样式
    romlist.attributes.addClass("zoom"+next);

    //更新配置文件
    view.UpdateConfig("romlist_zoom",next)
}

//文字大小
function changeFontSize(evt){
    var  val = evt.attributes['value'].toInteger();
    var dom = $(#romlist);
    val ++;
    if (val >= 11){
        if ($(#switch_romlist).attributes["value"] == 1){
            val = 0;
        }else{
            val = 1;
        }
    }
    for (var i = 0; i <= 10; i++){
        dom.attributes.removeClass('fontsize'+i);
    }

    dom.attributes.addClass('fontsize'+val);
    evt.attributes['value'] = val;
    view.UpdateConfig("font_size",val)
}

//运行快捷工具
function runShortcut(obj){
    var path = obj.attributes["path"];
    view.RunShortcut(path);
}

//切换主题
function changeTheme(obj){
    var id = obj.attributes["id"]; //主题列表
    self.attributes["theme"] = id;
    
    //更新主题样式
    setTheme(id);
    
    //更新配置文件
    view.UpdateConfig("theme",id)
}

//设置主题样式
function setTheme(themeId){

    if(CONF.Theme[themeId].Params["body-opacity"] != undefined){
        $(#titlebar).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        $(#left_platform).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        $(#left_menu).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        //$(#left_splitter).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        $(#center).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        $(#right).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
        $(#right_splitter).style["opacity"] = CONF.Theme[themeId].Params["body-opacity"];
    }

    var themePath = CONF.RootPath + "theme\\";

    if(CONF.Theme[themeId].Params["window-opacity"] != undefined){
        $(body).style["opacity"] = CONF.Theme[themeId].Params["window-opacity"];
    }

    if(CONF.Theme[themeId].Params["window-background-image"] != undefined){
        $(body).style["background-image"] = [url:URL.fromPath(themePath + CONF.Theme[themeId].Params["window-background-image"])];
    }

    if(CONF.Theme[themeId].Params["sidebar-image"] != undefined){
        $(#mask).style["background-image"] = [url:URL.fromPath(themePath + CONF.Theme[themeId].Params["sidebar-image"])];
    }    
}

//生成缓存
function createCache(evt){
    $(body).state.disabled = true;
    $(#create).attributes.addClass("disabled");
    startLoading();
    var opt = evt.attributes["opt"];
    var platform = 0;

    if (opt == "platform"){
        platform = ACTIVE_PLATFORM;
    }
    view.CreateRomCache(platform);
}

//检查更新
function checkUpgrade(evt){
    var data = view.CheckUpgrade();
    if(data != ""){
        upgrade(data)
    }else{
        view.msgbox(#info,CONF.Lang.Latestversion);
    }
}

//弹出关于窗口
function openAbout(){
    view.dialog({
        url:self.url(ROOTPATH + "about.html"),
        width:480,
    })
}
//弹出设置窗口
function openConfig(evt){
    view.dialog({
        url:self.url(ROOTPATH + "config.html"),
        width:655,
        height:780
    });
    startLoading();
    initConfig("1");
    endLoading();
}

//启动帮助
function runHelp(){
    Sciter.launch("http://www.simui.net/");
}

//发现更新
function upgrade(data){
    if (data == ""){
        return;
    }else if (data == "error"){
        view.msgbox(#warning,CONF.Lang.NetworkRequestFailed);
        return;
    }
 
    var dataObj = JSON.parse(data);

    //选择窗口
    var result = view.msgbox {
        type:#information, 
        caption:CONF.Lang.CheckUpgrade,
        content:CONF.Lang.FoundNewversion + ": " + dataObj.version, 
        buttons:[
            {id:#download,text:CONF.Lang.DownloadNewVersion},
            {id:#never,text:CONF.Lang.NotTip},
            {id:#cancel,text:CONF.Lang.Cancel,role:"default-button"}
        ]
    };

    switch(result){
        case "download":
            Sciter.launch("http://www.simui.net/");
            break;
        case "never":
            //更新平台信息
            view.UpdateConfig("upgrade_id",dataObj.id.toString());
            break;
    }
}


//更新缓存回调
function CB_createCache(){

    $(body).state.disabled = false;

    //更新配置
    initConfig("1");

    //重置滚动翻页数据
    resetScroll();

    //初始化rom
    ROMJSON = view.GetGameList(ACTIVE_PLATFORM,ACTIVE_MENU,"","",0)

    createRomList(1); //生成rom列表
    //生成rom数量
    var romCount = view.GetGameCount(ACTIVE_PLATFORM,"","");
    $(#rom_count_num).html = romCount; //初始化在线人数
    endLoading(); //关闭loading框

    $(#create).attributes.removeClass("disabled");
}
