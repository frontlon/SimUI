var MASK = true;
var SCROLL_POS = 0; //默认滚动条位置
var SCROLL_LOCK = false;
var SCROLL_PAGE = 0; //当前滚动条翻页页数
var CONF; //读取的config配置
var ROMJSON;//rom列表

//创建游戏rom dom
function createRomList(cls=0){
    var romobj = JSON.parse(ROMJSON);
    var romlist = self.$(#romlist);
    var switch_romlist = $(#switch_romlist).attributes["value"];
    var data = "";

    //如果清理参数=1，则清理掉所有数据
    if(cls == 1){
        romlist.clear();
    }

    if(switch_romlist == 1){
        //模块模式
        data = _createRomListBlock(romobj);
    }else{
        //列表模式
        data = _createRomListList(romobj,cls);

    }
    
    romlist.append(data);
    SCROLL_PAGE++;
}

//列表样式数据 - 模块
function _createRomListBlock(romobj){
    var title = "";
    var thumb = "";
    var romPath = "";
    var data = "";
    for(var obj in romobj) {
        var romName = getRomName(obj.RomPath)
        thumb = getRomPicPath(CONF.Default.Thumb,obj.Platform,romName);

        //没有找到图片，读取默认缩略图
        if(thumb == "" && CONF.Theme[CONF.Default.Theme].Params["default-thumb-image"] != undefined){
            thumb = URL.fromPath(CONF.RootPath + "theme/" + CONF.Theme[CONF.Default.Theme].Params["default-thumb-image"]);
        }
        data += "<li class='romitem' rid='"+ obj.Id +"' title='"+ title +"'>";
        data += "<div><img src='"+ thumb +"' /></div>";
        data += "<div>"+ obj.Name.toHtmlString() +"</div>";
        if(obj.Star == 1){data += "<span class='rom_star' style='display:block'></span>";}
        else{data += "<span class='rom_star' style='display:none'></span>";}
        data += "</li>"
    }
    return data;
}

//列表样式数据 - 列表
function _createRomListList(romobj,cls){
    var title = "";
    var romPath = "";
    var data = "";

    //标题列
    var column = CONF.Default.RomlistColumn.split(",");
    if(cls == 1){
        data += "<li class='romth'>";
        data += "<div></div>";
        data += "<div>"+CONF.Lang["BaseName"]+"</div>";
        if(column[0] == 1){data += "<div>"+CONF.Lang["FilterMenu"]+"</div>";}
        if(column[1] == 1){data += "<div>"+CONF.Lang["BaseType"]+"</div>";}
        if(column[2] == 1){data += "<div>"+CONF.Lang["BaseYear"]+"</div>";}
        if(column[3] == 1){data += "<div>"+CONF.Lang["BasePublisher"]+"</div>";}
        if(column[4] == 1){data += "<div>"+CONF.Lang["BaseCountry"]+"</div>";}
        if(column[5] == 1){data += "<div>"+CONF.Lang["BaseTranslate"]+"</div>";}
        if(column[6] == 1){data += "<div>"+CONF.Lang["BaseVersion"]+"</div>";}
        data += "</li>";
    }
    for(var obj in romobj) {
        if(obj.Menu == "_7b9"){
            obj.Menu = "";
        }
        if(obj.Name.toHtmlString().length > 20){
            title =  obj.Name.toHtmlString();
        }else{
            title = "";
        }


        var romName = getRomName(obj.RomPath);
        //现读图标
        var thumb = getRomPicPath("icon",obj.Platform,romName);
        //没有找到图标，找缩略图，读取默认缩略图
        if (thumb == ""){
            thumb = getRomPicPath(CONF.Default.Thumb,obj.Platform,romName);
            if(thumb == "" && CONF.Theme[CONF.Default.Theme].Params["default-thumb-image"] != undefined){
                thumb = URL.fromPath(CONF.RootPath + "theme/" + CONF.Theme[CONF.Default.Theme].Params["default-thumb-image"]);
            }
        }
        
        data += "<li class='romitem' rid='"+ obj.Id +"' title='"+ title +"'>";
        if(obj.Star == 1){
            data += "<div.star><img src='"+ thumb +"' /></div>";
        }else{
            data += "<div><img src='"+ thumb +"' /></div>";
        }

        data += "<div>"+ obj.Name.toHtmlString() +"</div>";
        if(column[0] == 1){data += "<div>"+ obj.Menu.toHtmlString() +"</div>";}
        if(column[1] == 1){data += "<div>"+ obj.BaseType +"</div>";}
        if(column[2] == 1){data += "<div>"+ obj.BaseYear +"</div>";}
        if(column[3] == 1){data += "<div>"+ obj.BasePublisher +"</div>";}
        if(column[4] == 1){data += "<div>"+ obj.BaseCountry +"</div>";}
        if(column[5] == 1){data += "<div>"+ obj.BaseTranslate +"</div>";}
        if(column[6] == 1){data += "<div>"+ obj.BaseVersion +"</div>";}
        //if(obj.Star == 1){data += "<span class='rom_star' style='display:block'></span>";}
        //else{data += "<span class='rom_star' style='display:none'></span>";}
        data += "</li>"
    }
    return data;

}

//rom分页
function scrollLoadRom(evtPos){

    var scrollPos = evtPos.toInteger() + $(#center).box(#height);
    var boxHeight = $(#romwrapper).box(#height);

    if(SCROLL_POS == 0){
        SCROLL_POS = scrollPos;
    }

    if ((boxHeight - scrollPos <=50) && (scrollPos > SCROLL_POS)){

        //如果加锁中，则不执行后续逻辑，防止重复触发
        if (SCROLL_LOCK == true){
            return;
        }
        SCROLL_LOCK = true; //加锁
        var menu = $(#menulist).select("dd:current").attributes["opt"];
        var val = self.$(#search_input).value;
        var num = $(#num_search).select("li:current").html;

        if(num == "ALL"){
            num = "";
        }
         //生成游戏列表
        var filter_type = $(#filter_type).value;
        var filter_publisher = $(#filter_publisher).value;
        var filter_year = $(#filter_year).value;
        var filter_country = $(#filter_country).value;
        var filter_translate = $(#filter_translate).value;
        var filter_version = $(#filter_version).value;
        ROMJSON = view.GetGameList(0,ACTIVE_PLATFORM,menu,val,num,SCROLL_PAGE,filter_type,filter_publisher,filter_year,filter_country,filter_translate,filter_version);

        if(ROMJSON != "[]"){
            createRomList(0);
            SCROLL_POS = scrollPos;
            SCROLL_LOCK = false;
        }
    }

}

//初始化滚动分页功能
function resetScroll(){
    SCROLL_PAGE = 0;
    SCROLL_LOCK = false;
    SCROLL_POS = 0
}

//字母搜索
function numSearch(evt){

    //重复点击拦截
    var current = $(#num_search).select("li:current");
    if(current != undefined && current.html == evt.html){
        return;
    }

    var menu = $(#menulist).select("dd:current").attributes["opt"];
    var num = evt.html;

    if(num == "ALL"){
        num = "";
    }

    //重置滚动翻页数据
    resetScroll();

    $(#filter_type).value = "";
    $(#filter_publisher).value = "";
    $(#filter_year).value = "";
    $(#filter_country).value = "";

    ROMJSON = view.GetGameList(0,ACTIVE_PLATFORM,menu,"",num,SCROLL_PAGE,"","","","","","");
    createRomList(1);

    //激活当前，改变样式
    evt.state.current = true;
}

//读取一个rom的展示图地址
function getRomPicPath(type,platform,name){
    var path = "";
    //检查图片类型，拼接图片地址和文件名

    switch(type){
        case "thumb":
            path = CONF.Platform[platform.toString()].ThumbPath + "/" + name ;
            break;
        case "snap":
            path = CONF.Platform[platform.toString()].SnapPath + "/" + name ;
            break;
        case "poster":
            path = CONF.Platform[platform.toString()].PosterPath + "/" + name ;
            break;
        case "packing":
            path = CONF.Platform[platform.toString()].PackingPath + "/" + name ;
            break;
        case "title":
            path = CONF.Platform[platform.toString()].TitlePath + "/" + name ;
            break;
        case "cassette":
            path = CONF.Platform[platform.toString()].CassettePath + "/" + name ;
            break;
        case "icon":
            path = CONF.Platform[platform.toString()].IconPath + "/" + name ;
            break;
        case "gif":
            path = CONF.Platform[platform.toString()].GifPath + "/" + name ;
            break;
        case "background":
            path = CONF.Platform[platform.toString()].BackgroundPath + "/" + name ;
            break;
        case "wallpaper":
            path = CONF.Platform[platform.toString()].WallpaperPath + "/" + name ;
            break;
        case "video":
            path = CONF.Platform[platform.toString()].VideoPath + "/" + name ;
            break;
        default:
            return "";
    }

    var exts = [];
    if (type == "video"){
         exts = ["wmv","mp4","avi"]; //支持的视频类型
    }else{
         exts = ["png","jpg","gif","ico","jpeg","bmp"]; //支持的图片类型
    }
    

    var isset = false; //图片是否存在
    var pic = ""; //图片地址
    for(var ext in exts) {
        pic = path +"."+ext;

        if(System.scanFiles(pic)){ //检查图片是否存在
            isset = true;
            break;
        }
    }

    if (isset == true){
        return URL.fromPath(pic);
    }else{
        return "";
    }
}

//rom列表运行游戏
function romListRunGame(evt){
    videoPause();
    var getjson = view.GetGameDetail(evt.attributes["rid"]);
    var detailObj = JSON.parse(getjson);
    var info = detailObj.Info;
    view.RunGame(evt.attributes["rid"],info.SimId);
}